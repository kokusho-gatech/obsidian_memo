app:
  description: 物件カテゴリとジャックス基準での利回り、仕入れ可否判定、NG会社のフィルタリング、補填費用の可否がわかります
  icon: 🏦
  icon_background: '#D1E9FF'
  mode: workflow
  name: 【開発中】仕入判定_ver2.1_全国対応
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/gemini:0.2.7@b8a04c0155eb3b9d43ed1199b4387e7f67ef75ad63fcec466eab31a726e2c3a0
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/bedrock:0.0.25@a1f0f4842b4862db63f1194bdca9cf9b0e00543ef0a21dbfcb383376ec0b4faa
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: d11e8472-64a7-4de3-b547-2676a7dd0e47
    name: rakuten_ng_standard
    selector:
    - env
    - rakuten_ng_standard
    value: '楽天銀行では、下記の仕入基準を設けています。  下記に該当する場合はNG エリア（東京都23区外、埼玉県さいたま市、東京都府中市、東京都八王子市、神奈川県藤沢市）
      最寄駅から徒歩12分以上はNG（但し、エリアが良い場合はその限りではない） 専有面積が18㎡~100㎡の範囲を超える場合   なお、下記に該当する場合は、エリアがOKでも築年数でNG  千葉県（対象駅：千葉駅、浦安駅、千葉駅、浦安駅、津田沼駅、松戸駅、市川駅、柏駅）の築25年以上の物件
      埼玉県（浦和駅、大宮駅、川口駅、西川口駅、武蔵浦和駅）の築25年以上の物件 東京23区内と大阪府大阪市の築25年以上の物件 福岡県の築20年以上の物件
      大阪府大阪市以外にある関西地方の築20年以上の物件   '
    value_type: string
  - description: ''
    id: 15e752b0-2258-4f3d-8680-188360d77e5a
    name: jacks_ng_standard
    selector:
    - env
    - jacks_ng_standard
    value: ジャックスでの評価基準は次の通りです。    ・駅徒歩：徒歩15分以上は一律NG  ・専有面積：エリア3の18㎡未満の部屋はNG ・所在階：防犯、視覚ストレス対策なしの1階物件はNG  ・エレベーターの有無：総階数が3階以上にも関わらず、エレベーターがない場合はNG  ・バルコニーの有無：バルコニーなしはNG  ・心理的瑕疵：自殺等の告知事項など心理的瑕疵がある住戸（上下左右の部屋もNG）  ・築年月：旧耐震基準（1981年6月1日以前）の建物はNG
      ・洗濯機置き場：ない場合はNG  ・セントラル給湯はNG
    value_type: string
  - description: ''
    id: 5a68f214-79a2-402e-af00-25db5caf0cf5
    name: orix_ng_standard
    selector:
    - env
    - orix_ng_standard
    value: オリックス銀行での評価基準は次の通りです。  ・駅徒歩：最寄駅から15分以上はNG。但し物件によっては評価が出る可能性あり。 ・専有面積：18㎡以上50㎡未満はOK。範囲外の部屋はNG。関東以外の40平米以上はNG。
      ・所在階：半地下はNG ・総戸数：管理人室除き、総戸数20戸未満はNG ・エレベーターの有無：エレベーターがない場合はNG ・バルコニーの有無：バルコニーなしはNG
      ・心理的瑕疵：自殺等の告知事項など心理的瑕疵がある住戸（上下左右の部屋もNG） ・築年数：築25年以上はNG（築24年11ヶ月まで取扱可、25年突入したら完全NG）
      ・洗濯機置き場：ない場合はNG ・セントラル給湯はNG
    value_type: string
  - description: ''
    id: 22ae8405-846f-4329-bea7-2684a619f2fe
    name: orix_ng_company
    selector:
    - env
    - orix_ng_company
    value: オリックス銀行では、不動産仲介会社や賃貸管理会社、もしくは建物管理会社として次の会社に当てはまる場合は評価がNGで返ってくるため、仕入れ判定はNGになります。なお、株式会社や（株）を除く部分は完全一致した場合にNGと返します。    ・不動産仲介会社
      株式会社FRAT 株式会社スプリングエステート クレエ株式会社 株式会社LEAF 株式会社楽人ホールディングス 株式会社PLEAST レントサポート株式会社
      株式会社YCMリアルエステートインターナショナル   ・建物管理会社 （株）プレストサービス（プレサンスではない）  ・サブリース会社 株式会社リブマックス
      株式会社青山メインランド アムスインターナショナル株式会社 株式会社ロイズ START スタート   ・賃貸管理会社 株式会社青山メインランド 株式会社スプリングエステート
      株式会社エレマックス 株式会社LEAF 株式会社アスヴェル 株式会社エイペックスコミュニティ 株式会社ジー・ゲート 株式会社サンビルド 然総合管理株式会社   ・賃借人
      株式会社リブ・マックス 株式会社青山メインランド  ・売主 Trees株式会社
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 100
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744189485278-source-1744190071662-target
      selected: false
      source: '1744189485278'
      sourceHandle: source
      target: '1744190071662'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17441897532970-source-1744190071662-target
      selected: false
      source: '17441897532970'
      sourceHandle: source
      target: '1744190071662'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17441897528330-source-1744190071662-target
      selected: false
      source: '17441897528330'
      sourceHandle: source
      target: '1744190071662'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 1744189356658-source-1744253042636-target
      selected: false
      source: '1744189356658'
      sourceHandle: source
      target: '1744253042636'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 1744253042636-true-17442514526600-target
      selected: false
      source: '1744253042636'
      sourceHandle: 'true'
      target: '17442514526600'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1744253042636-false-1744189485278-target
      selected: false
      source: '1744253042636'
      sourceHandle: 'false'
      target: '1744189485278'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17442514526600-source-17442532478970-target
      selected: false
      source: '17442514526600'
      sourceHandle: source
      target: '17442532478970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17442532478970-source-1744189485278-target
      selected: false
      source: '17442532478970'
      sourceHandle: source
      target: '1744189485278'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 17441895123880-source-17442544290430-target
      selected: false
      source: '17441895123880'
      sourceHandle: source
      target: '17442544290430'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 17442544290430-true-17442514962300-target
      selected: false
      source: '17442544290430'
      sourceHandle: 'true'
      target: '17442514962300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 17442544290430-false-17441897532970-target
      selected: false
      source: '17442544290430'
      sourceHandle: 'false'
      target: '17441897532970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: if-else
      id: 17441895565890-source-17442544310300-target
      selected: false
      source: '17441895565890'
      sourceHandle: source
      target: '17442544310300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: knowledge-retrieval
      id: 17442544310300-true-17442515043620-target
      selected: false
      source: '17442544310300'
      sourceHandle: 'true'
      target: '17442515043620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 17442544310300-false-17441897528330-target
      selected: false
      source: '17442544310300'
      sourceHandle: 'false'
      target: '17441897528330'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17442514962300-source-17442545166910-target
      selected: false
      source: '17442514962300'
      sourceHandle: source
      target: '17442545166910'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17442545166910-source-17441897532970-target
      selected: false
      source: '17442545166910'
      sourceHandle: source
      target: '17441897532970'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17442515043620-source-17442545168830-target
      selected: false
      source: '17442515043620'
      sourceHandle: source
      target: '17442545168830'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17442545168830-source-17441897528330-target
      selected: false
      source: '17442545168830'
      sourceHandle: source
      target: '17441897528330'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1744282688828-source-17441822209360-target
      selected: false
      source: '1744282688828'
      sourceHandle: source
      target: '17441822209360'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744356775720-source-1744358049174-target
      selected: false
      source: '1744356775720'
      sourceHandle: source
      target: '1744358049174'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744360238139-source-1744361040220-target
      selected: false
      source: '1744360238139'
      sourceHandle: source
      target: '1744361040220'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1744361040220-source-1744361251036-target
      selected: false
      source: '1744361040220'
      sourceHandle: source
      target: '1744361251036'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1744361251036-source-1744361311304-target
      selected: false
      source: '1744361251036'
      sourceHandle: source
      target: '1744361311304'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744358049174-source-1744359151278-target
      selected: false
      source: '1744358049174'
      sourceHandle: source
      target: '1744359151278'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744358257922-source-1744359151278-target
      selected: false
      source: '1744358257922'
      sourceHandle: source
      target: '1744359151278'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744358735699-source-1744359151278-target
      selected: false
      source: '1744358735699'
      sourceHandle: source
      target: '1744359151278'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744190071662-source-1744356775720-target
      selected: false
      source: '1744190071662'
      sourceHandle: source
      target: '1744356775720'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744190071662-source-1744358257922-target
      selected: false
      source: '1744190071662'
      sourceHandle: source
      target: '1744358257922'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744190071662-source-1744358735699-target
      selected: false
      source: '1744190071662'
      sourceHandle: source
      target: '1744358735699'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744708669708-source-1744709170101-target
      selected: false
      source: '1744708669708'
      sourceHandle: source
      target: '1744709170101'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744709170101-source-1744709515205-target
      selected: false
      source: '1744709170101'
      sourceHandle: source
      target: '1744709515205'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1744714301158-source-1744189356658-target
      selected: false
      source: '1744714301158'
      sourceHandle: source
      target: '1744189356658'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17447659678820-source-17441895123880-target
      selected: false
      source: '17447659678820'
      sourceHandle: source
      target: '17441895123880'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17447660019650-source-17441895565890-target
      selected: false
      source: '17447660019650'
      sourceHandle: source
      target: '17441895565890'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744708430422-source-17447685934460-target
      selected: false
      source: '1744708430422'
      sourceHandle: source
      target: '17447685934460'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: llm
      id: 1742781950109-source-1744282688828-target
      selected: false
      source: '1742781950109'
      sourceHandle: source
      target: '1744282688828'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744709515205-source-1744886370173-target
      selected: false
      source: '1744709515205'
      sourceHandle: source
      target: '1744886370173'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744886370173-source-1744886948989-target
      selected: false
      source: '1744886370173'
      sourceHandle: source
      target: '1744886948989'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744886948989-source-1744945728352-target
      selected: false
      source: '1744886948989'
      sourceHandle: source
      target: '1744945728352'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 1744360121607-source-1744360238139-target
      selected: false
      source: '1744360121607'
      sourceHandle: source
      target: '1744360238139'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744887463772-source-1744190071662-target
      selected: false
      source: '1744887463772'
      sourceHandle: source
      target: '1744190071662'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744945728352-source-1744951671985-target
      selected: false
      source: '1744945728352'
      sourceHandle: source
      target: '1744951671985'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744887631356-source-1744887463772-target
      selected: false
      source: '1744887631356'
      sourceHandle: source
      target: '1744887463772'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: parameter-extractor
        targetType: code
      id: 17441822209360-source-1744954912822-target
      selected: false
      source: '17441822209360'
      sourceHandle: source
      target: '1744954912822'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744954912822-source-1744945587153-target
      selected: false
      source: '1744954912822'
      sourceHandle: source
      target: '1744945587153'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744951671985-source-1744956146599-target
      selected: false
      source: '1744951671985'
      sourceHandle: source
      target: '1744956146599'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744979004484-source-1744979283119-target
      selected: false
      source: '1744979004484'
      sourceHandle: source
      target: '1744979283119'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744361311304-source-1744985088407-target
      selected: false
      source: '1744361311304'
      sourceHandle: source
      target: '1744985088407'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744979283119-source-17449888333070-target
      selected: false
      source: '1744979283119'
      sourceHandle: source
      target: '17449888333070'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449888333070-source-17449885245800-target
      selected: false
      source: '17449888333070'
      sourceHandle: source
      target: '17449885245800'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449885245800-source-17449889818030-target
      selected: false
      source: '17449885245800'
      sourceHandle: source
      target: '17449889818030'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449889818030-source-17449892308840-target
      selected: false
      source: '17449889818030'
      sourceHandle: source
      target: '17449892308840'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449892308840-source-17449894475790-target
      selected: false
      source: '17449892308840'
      sourceHandle: source
      target: '17449894475790'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744985088407-source-1744708430422-target
      selected: false
      source: '1744985088407'
      sourceHandle: source
      target: '1744708430422'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744985088407-source-1744714301158-target
      selected: false
      source: '1744985088407'
      sourceHandle: source
      target: '1744714301158'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744985088407-source-17447659678820-target
      selected: false
      source: '1744985088407'
      sourceHandle: source
      target: '17447659678820'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744985088407-source-17447660019650-target
      selected: false
      source: '1744985088407'
      sourceHandle: source
      target: '17447660019650'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17447685934460-source-1745206735995-target
      selected: false
      source: '17447685934460'
      sourceHandle: source
      target: '1745206735995'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1745206735995-source-1744708669708-target
      selected: false
      source: '1745206735995'
      sourceHandle: source
      target: '1744708669708'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744956146599-source-1745219886048-target
      selected: false
      source: '1744956146599'
      sourceHandle: source
      target: '1745219886048'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1745219886048-source-1744887631356-target
      selected: false
      source: '1745219886048'
      sourceHandle: source
      target: '1744887631356'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449786735610-source-1744979004484-target
      selected: false
      source: '17449786735610'
      sourceHandle: source
      target: '1744979004484'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17449894475790-source-1744979926622-target
      selected: false
      source: '17449894475790'
      sourceHandle: source
      target: '1744979926622'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744979926622-source-1744979899122-target
      selected: false
      source: '1744979926622'
      sourceHandle: source
      target: '1744979899122'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1744380192035-source-1750422547769-target
      selected: false
      source: '1744380192035'
      sourceHandle: source
      target: '1750422547769'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1750240500121-true-17527266387020-target
      selected: false
      source: '1750240500121'
      sourceHandle: 'true'
      target: '17527266387020'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17527266387020-source-1744360121607-target
      selected: false
      source: '17527266387020'
      sourceHandle: source
      target: '1744360121607'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1750240500121-true-17527267178200-target
      selected: false
      source: '1750240500121'
      sourceHandle: 'true'
      target: '17527267178200'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17527267178200-source-17443835493500-target
      selected: false
      source: '17527267178200'
      sourceHandle: source
      target: '17443835493500'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1750240500121-false-17527267479120-target
      selected: false
      source: '1750240500121'
      sourceHandle: 'false'
      target: '17527267479120'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17527267479120-source-17502405777910-target
      selected: false
      source: '17527267479120'
      sourceHandle: source
      target: '17502405777910'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: code
      id: 1750240500121-false-17527267474810-target
      selected: false
      source: '1750240500121'
      sourceHandle: 'false'
      target: '17527267474810'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17527267474810-source-17502405924900-target
      selected: false
      source: '17527267474810'
      sourceHandle: source
      target: '17502405924900'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 1744945587153-source-1750240500121-target
      selected: false
      source: '1744945587153'
      sourceHandle: source
      target: '1750240500121'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17443835493500-source-17536788863340-target
      selected: false
      source: '17443835493500'
      sourceHandle: source
      target: '17536788863340'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536788863340-source-17536789121950-target
      selected: false
      source: '17536788863340'
      sourceHandle: source
      target: '17536789121950'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17536789121950-source-17443835493503-target
      selected: false
      source: '17536789121950'
      sourceHandle: source
      target: '17443835493503'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17443835493503-source-17536790221620-target
      selected: false
      source: '17443835493503'
      sourceHandle: source
      target: '17536790221620'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536790221620-source-1744985088407-target
      selected: false
      source: '17536790221620'
      sourceHandle: source
      target: '1744985088407'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17502405777910-source-17536792033640-target
      source: '17502405777910'
      sourceHandle: source
      target: '17536792033640'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17502405924900-source-17536792033642-target
      source: '17502405924900'
      sourceHandle: source
      target: '17536792033642'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536792033642-source-17536792033643-target
      source: '17536792033642'
      sourceHandle: source
      target: '17536792033643'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536792033640-source-17536792033641-target
      source: '17536792033640'
      sourceHandle: source
      target: '17536792033641'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17536792033641-source-17502405906880-target
      source: '17536792033641'
      sourceHandle: source
      target: '17502405906880'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 17536792033643-source-17503029643790-target
      source: '17536792033643'
      sourceHandle: source
      target: '17503029643790'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17502405906880-source-17536797903060-target
      source: '17502405906880'
      sourceHandle: source
      target: '17536797903060'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: code
      id: 17503029643790-source-17536798046200-target
      source: '17503029643790'
      sourceHandle: source
      target: '17536798046200'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536797903060-source-1744985088407-target
      source: '17536797903060'
      sourceHandle: source
      target: '1744985088407'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17536798046200-source-1744985088407-target
      source: '17536798046200'
      sourceHandle: source
      target: '1744985088407'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744359151278-source-17449786735610-target
      source: '1744359151278'
      sourceHandle: source
      target: '17449786735610'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744360071507-source-1744380192035-target
      source: '1744360071507'
      sourceHandle: source
      target: '1744380192035'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 1744979899122-source-1744360071507-target
      source: '1744979899122'
      sourceHandle: source
      target: '1744360071507'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: 'supplier by renosyの査定 or 交渉画面から物件情報部分をコピーして貼り付けます。

          関東物件限定で利回りと物件カテゴリの判定ができます。'
        selected: false
        title: 開始
        type: start
        variables:
        - label: article_info
          max_length: 999999
          options: []
          required: true
          type: paragraph
          variable: article_info
      height: 181
      id: '1742781950109'
      position:
        x: -3362.0754638780495
        y: 111.85621477647405
      positionAbsolute:
        x: -3362.0754638780495
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: y_baba2
        desc: ''
        height: 537
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"オリックス銀行では、不動産仲介会社や賃貸管理会社、もしくは建物管理会社として次の会社に当てはまる場合は評価がNGで返ってくるため、仕入れ判定はNGになります。なお、株式会社や（株）を除く部分は完全一致した場合にNGと返します。
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・不動産仲介会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社FRAT","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社スプリングエステート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"クレエ株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社LEAF","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社楽人ホールディングス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社PLEAST","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"レントサポート株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社YCMリアルエステートインターナショナル
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・建物管理会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"（株）プレストサービス（プレサンスではない）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・サブリース会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社リブマックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"アムスインターナショナル株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社ロイズ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"START
          スタート ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・賃貸管理会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社スプリングエステート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社エレマックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社LEAF","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社アスヴェル","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社エイペックスコミュニティ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社ジー・ゲート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社サンビルド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"然総合管理株式会社
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・賃借人","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社リブ・マックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・売主","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Trees株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 250
      height: 537
      id: '1742889885291'
      position:
        x: -1515.5416210866056
        y: 2086.6261916857284
      positionAbsolute:
        x: -1515.5416210866056
        y: 2086.6261916857284
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 250
    - data:
        author: y_baba2
        desc: ''
        height: 482
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"オリックス銀行での評価基準は次の通りです。  ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・駅徒歩：最寄駅から15分以上はNG。但し物件によっては評価が出る可能性あり。","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・専有面積：18㎡以上50㎡未満はOK。範囲外の部屋はNG。関東以外の40平米以上はNG。 ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・所在階：半地下はNG
          ・総戸数：管理人室除き、総戸数20戸未満はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・エレベーターの有無：エレベーターがない場合はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・バルコニーの有無：バルコニーなしはNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・心理的瑕疵：自殺等の告知事項など心理的瑕疵がある住戸（上下左右の部屋もNG）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・築年数：築25年以上はNG（築24年11ヶ月まで取扱可、25年突入したら完全NG） ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・洗濯機置き場：ない場合はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・セントラル給湯はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 240
      height: 482
      id: '17428900101010'
      position:
        x: -1071.2161027208977
        y: 2265.4454684767243
      positionAbsolute:
        x: -1071.2161027208977
        y: 2265.4454684767243
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        author: y_baba2
        desc: ''
        height: 409
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"ジャックスでの評価基準は次の通りです。  ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・駅徒歩：徒歩15分以上は一律NG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・専有面積：エリア3の18㎡未満の部屋はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・所在階：防犯、視覚ストレス対策なしの1階物件はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・エレベーターの有無：総階数が3階以上にも関わらず、エレベーターがない場合はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・バルコニーの有無：バルコニーなしはNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・心理的瑕疵：自殺等の告知事項など心理的瑕疵がある住戸（上下左右の部屋もNG）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・築年数：旧耐震基準の建物はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・洗濯機置き場：ない場合はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・セントラル給湯はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: '  (2)'
        type: ''
        width: 240
      height: 409
      id: '17428934625590'
      position:
        x: 494.1881327315788
        y: -587.526184096375
      positionAbsolute:
        x: 494.1881327315788
        y: -587.526184096375
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        author: y_baba2
        desc: ''
        height: 223
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"上のワークフローにぶち込む","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"販売カテゴリ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"https://docs.google.com/spreadsheets/d/15GcAPSjZjoB0y0JYM9XgVyuDSd6cd5xR7LC9wdvmSm4/edit?gid=697322005#gid=697322005","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 249
      height: 223
      id: '1742897131936'
      position:
        x: -2047.9712014474185
        y: 1880.5201824847816
      positionAbsolute:
        x: -2047.9712014474185
        y: 1880.5201824847816
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 249
    - data:
        author: y_baba2
        desc: ''
        height: 584
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"楽天銀行では、下記の仕入基準を設けています。","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"下記に該当する場合はNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"エリア（東京都23区外、埼玉県さいたま市、東京都府中市、東京都八王子市、神奈川県藤沢市）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"最寄駅から徒歩12分以上はNG（但し、エリアが良い場合はその限りではない）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":2},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"専有面積が18㎡~100㎡の範囲を超える場合","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":3}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"なお、下記に該当する場合は、エリアがOKでも築年数でNG","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"千葉県（対象駅：千葉駅、浦安駅、千葉駅、浦安駅、津田沼駅、松戸駅、市川駅、柏駅）の築25年以上の物件","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"埼玉県（浦和駅、大宮駅、川口駅、西川口駅、武蔵浦和駅）の築25年以上の物件","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":2},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"東京23区内と大阪府大阪市の築25年以上の物件","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":3},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"福岡県の築20年以上の物件","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":4},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"大阪府大阪市以外にある関西地方の築20年以上の物件","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":5}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ","type":"text","version":1}],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 250
      height: 584
      id: '17434893277590'
      position:
        x: 457.5201203297038
        y: 2231.473548996725
      positionAbsolute:
        x: 457.5201203297038
        y: 2231.473548996725
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 250
    - data:
        author: y_baba2
        desc: ''
        height: 482
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"建物比率高いので、ウォッチしてねリスト","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"https://docs.google.com/spreadsheets/d/1kV9ov7xwobwin6COmVPjDDYGy9YuKfM6-prT6qLf1CU/edit?gid=344523947#gid=344523947","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: '  (3)'
        type: ''
        width: 240
      height: 482
      id: '17437461480450'
      position:
        x: -1793.975672635766
        y: 1940.6205165092094
      positionAbsolute:
        x: -1793.975672635766
        y: 1940.6205165092094
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        desc: ''
        instruction: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: gemini-2.0-flash-lite
          provider: langgenius/gemini/google
        parameters:
        - description: 物件名
          name: bldg_name
          required: false
          type: string
        - description: 所在地
          name: address
          required: false
          type: string
        - description: '最寄り駅①

            フォーマットは"〇〇駅"'
          name: station1
          required: false
          type: string
        - description: 最寄り駅①までの徒歩分数
          name: walk_minute_to_station1
          required: false
          type: number
        - description: 所在階
          name: floor
          required: false
          type: number
        - description: 地上階層
          name: stories_high
          required: false
          type: number
        - description: 築年
          name: built_year
          required: false
          type: number
        - description: 占有面積
          name: footprint
          required: false
          type: number
        - description: 'エレベータの有無。

            あり、なし、未指定の3択。

            ”あり”という記載がない場合は未指定にしてください


            そもそも項目自体が提示されていない場合もあるので、その場合も未指定にしてください。'
          name: is_elevator_exist
          required: false
          type: string
        - description: バスタイプ
          name: bathroom_type
          required: false
          type: string
        - description: '最寄り駅②

            フォーマットは"〇〇駅"

            ない場合は"不明"とする'
          name: station2
          required: false
          type: string
        - description: '最寄り駅②までの徒歩分数

            なければ抽出しない'
          name: walk_minute_to_station2
          required: false
          type: number
        - description: 仲介会社名
          name: intermediary_company
          required: false
          type: string
        - description: サブリース会社名
          name: subleasing_company
          required: false
          type: string
        - description: 建物管理会社名
          name: building_management_company
          required: false
          type: string
        - description: 建物構造
          name: building_structure
          required: false
          type: string
        - description: 総戸数
          name: total_rooms
          required: false
          type: number
        - description: '室内洗濯機置き場があるか

            あり、なし、未指定の３択

            ”あり”という記載がない場合は未指定にしてください


            そもそも項目自体が提示されていない場合もあるので、その場合も未指定にしてください。'
          name: indoor_washing_machine_storage
          required: false
          type: string
        - description: 現況
          name: current_status
          required: false
          type: string
        - description: '"関東"or"関西"or"九州"or"東北"のいずれか'
          name: area
          required: false
          type: string
        - description: 修繕積立金
          name: repair_reserve_fund
          required: false
          type: number
        - description: 賃料
          name: rental_price
          required: false
          type: number
        - description: 管理費
          name: administrative_cost
          required: false
          type: number
        - description: その他費用
          name: other_cost
          required: false
          type: number
        - description: 心理的瑕疵
          name: is_stigmatized
          required: false
          type: string
        - description: 築月
          name: built_month
          required: false
          type: number
        - description: 'オートロックの有無。

            あり、なし、未指定の３択

            ”あり”という記載がない場合は未指定にしてください


            そもそも項目自体が提示されていない場合もあるので、その場合も未指定にしてください。'
          name: auto_lock
          required: false
          type: string
        - description: 都道府県
          name: prefecture
          required: true
          type: string
        query:
        - '1744282688828'
        - text
        reasoning_mode: prompt
        selected: false
        title: 物件情報抽出
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 89
      id: '17441822209360'
      position:
        x: -2466.615804862071
        y: 111.85621477647405
      positionAbsolute:
        x: -2466.615804862071
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - Ir79YeYl4a9V9buBsmlR2/lH8LbNGlzkGG0RUltUdYb2RSp4J5Nn+9Lut4QHLeu9
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.6
          top_k: 6
          weights:
            keyword_setting:
              keyword_weight: 1
            vector_setting:
              embedding_model_name: cohere.embed-multilingual-v3
              embedding_provider_name: langgenius/bedrock/bedrock
              vector_weight: 0
        query_variable_selector:
        - '1744714301158'
        - result
        retrieval_mode: multiple
        selected: false
        title: NG仲介会社dbから完全一致検索_ジャックス
        type: knowledge-retrieval
      height: 91
      id: '1744189356658'
      position:
        x: 1967.9219466669654
        y: 874.4252863527863
      positionAbsolute:
        x: 1967.9219466669654
        y: 874.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 完全一致結果json化_仲介会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '1744189356658'
          - result
          variable: arg1
      height: 53
      id: '1744189485278'
      position:
        x: 3186.091229744036
        y: 953.3657735741796
      positionAbsolute:
        x: 3186.091229744036
        y: 953.3657735741796
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - E+oywZXam1MMaklUG6IjG7pV+hsf+HjnXkO7ITJDncZsySe7ur/G6dcCxJUcEWKX
        - Ir79YeYl4a9V9buBsmlR2/lH8LbNGlzkGG0RUltUdYb2RSp4J5Nn+9Lut4QHLeu9
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.6
          top_k: 6
        query_variable_selector:
        - '17447659678820'
        - result
        retrieval_mode: multiple
        selected: false
        title: NG建物管理会社dbから完全一致検索_ジャックス
        type: knowledge-retrieval
      height: 91
      id: '17441895123880'
      position:
        x: 1967.9219466669654
        y: 1038.4252863527863
      positionAbsolute:
        x: 1967.9219466669654
        y: 1038.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - E+oywZXam1MMaklUG6IjG7pV+hsf+HjnXkO7ITJDncZsySe7ur/G6dcCxJUcEWKX
        - Ir79YeYl4a9V9buBsmlR2/lH8LbNGlzkGG0RUltUdYb2RSp4J5Nn+9Lut4QHLeu9
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.6
          top_k: 6
        query_variable_selector:
        - '17447660019650'
        - result
        retrieval_mode: multiple
        selected: false
        title: NGサブリース会社dbから完全一致検索
        type: knowledge-retrieval
      height: 91
      id: '17441895565890'
      position:
        x: 1967.9219466669654
        y: 1202.4252863527863
      positionAbsolute:
        x: 1967.9219466669654
        y: 1202.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 完全一致検索結果json化_サブリース会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '17441895565890'
          - result
          variable: arg1
      height: 53
      id: '17441897528330'
      position:
        x: 3186.091229744036
        y: 1278.2042739169574
      positionAbsolute:
        x: 3186.091229744036
        y: 1278.2042739169574
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 完全一致検索結果json化_建物管理会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '17441895123880'
          - result
          variable: arg1
      height: 53
      id: '17441897532970'
      position:
        x: 3190.128253571333
        y: 1116.4120276569533
      positionAbsolute:
        x: 3190.128253571333
        y: 1116.4120276569533
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(is_intermediary_ng: dict, is_intermediary_ng_sub: dict,\
          \ intermediary_company: str, is_management_ng: dict, is_management_ng_sub:\
          \ dict, bldg_management_company: str, is_sublease_ng: dict,is_sublease_ng_sub:\
          \ dict,  subleasing_company: str, current_status: str) -> dict:\n\n    answer\
          \ = '\\n\\n<span style=\"color: white; background-color: #0066FF; padding:\
          \ 2px 6px; border-radius: 4px;\">会社判定結果\U0001F3E2<span>'\n    answer +=\
          \ '<details>'\n    answer += '\\n\\n▪️仲介会社判定結果\U0001F3E2：'\n    if intermediary_company\
          \ != \"不明\":\n        if is_intermediary_ng[\"status\"] == 'OK':\n     \
          \       answer += 'NG❌'\n            answer += f'\\n<details>抽出した会社名：{intermediary_company}\\\
          n'\n            answer += f'\\nNG❌：{is_intermediary_ng[\"company_name\"\
          ]}と一致しました。\\n'\n        else:\n            if is_intermediary_ng_sub is\
          \ not None and is_intermediary_ng_sub[\"status\"] == 'OK':\n           \
          \     answer += '要確認☑️'\n                answer += f'\\n<details>抽出した会社名：{intermediary_company}\\\
          n'\n                answer += '\\n完全一致する会社名は見当たりませんでした。\\n'\n          \
          \      answer += f'\\nしかし、類似したNG会社として\\n「{is_intermediary_ng_sub[\"company_name\"\
          ]}」\\nがあります。こちらの会社と同一でないことを確認してください。\\n'\n            else:\n          \
          \      answer += 'OK⭕️'\n                answer += f'\\n<details>抽出した会社名：{intermediary_company}\\\
          n'\n                answer += '\\n完全一致する会社名は見当たりませんでした。\\n'\n        answer\
          \ += '</details>\\n'\n    else:\n        answer += '不明'\n\n    if bldg_management_company\
          \ != \"不明\":\n        if is_management_ng[\"status\"] == 'OK':\n       \
          \     answer += '\\n\\n▪️建物管理会社判定結果\U0001F3E2：NG❌'\n            answer +=\
          \ f'\\n<details>抽出した会社名：{bldg_management_company}\\n'\n            answer\
          \ += f'\\nNG❌：{is_management_ng[\"company_name\"]}と完全一致しました。'\n        else:\n\
          \            if is_management_ng_sub is not None and is_management_ng_sub[\"\
          status\"] == 'OK':\n                answer += '\\n\\n▪️建物管理会社判定結果\U0001F3E2\
          ：要確認☑️'\n                answer += f'\\n<details>抽出した会社名：{bldg_management_company}\\\
          n'\n                answer += '\\n完全一致する会社名は見当たりませんでした。\\n'\n          \
          \      answer += f'\\nしかし、類似したNG会社として\\n「{is_management_ng_sub[\"company_name\"\
          ]}」\\nがあります。こちらの会社と同一でないことを確認してください。\\n'\n            else:\n          \
          \      answer += '\\n\\n③建物管理会社判定結果\U0001F3E2：OK⭕️'\n                answer\
          \ += f'\\n<details>抽出した会社名：{bldg_management_company}\\n'\n             \
          \   answer += '\\n完全一致する会社名は見当たりませんでした。\\n'\n        answer += '</details>\\\
          n'\n    else:\n        answer += '\\n\\n▪️建物管理会社判定結果\U0001F3E2：不明'\n\n\n\
          \    if subleasing_company != \"不明\":\n        if is_sublease_ng[\"status\"\
          ] == 'OK':\n            answer += '\\n④サブリース会社判定結果\U0001F3E2：NG❌'\n    \
          \        answer += f'\\n<details>抽出した会社名：{subleasing_company} \\n'\n   \
          \         answer += f'\\n{is_sublease_ng[\"company_name\"]}と完全一致しました。'\n\
          \        else:\n            if is_sublease_ng_sub is not None and is_sublease_ng_sub[\"\
          status\"] == 'OK':\n                answer += '\\n④サブリース会社判定結果\U0001F3E2\
          ：要確認☑️'\n                answer += f'\\n<details>抽出した会社名：{subleasing_company}\
          \ \\n'\n                answer += '\\n完全一致する会社名は見当たりませんでした。\\n'\n      \
          \          answer += f'\\nしかし、類似したNG会社として\\n「{is_sublease_ng_sub[\"company_name\"\
          ]}」\\nがあります。こちらの会社と同一でないことを確認してください。\\n'\n            else:\n          \
          \      answer += '\\n④サブリース会社判定結果\U0001F3E2：OK⭕️'\n                answer\
          \ += f'\\n<details>抽出した会社名：{subleasing_company} \\n'\n                answer\
          \ += '\\n完全一致する会社名は見当たりませんでした。\\n\\n'\n        answer += '</details>\\n'\n\
          \    else:\n        if current_status == \"サブリース中\":\n            answer\
          \ += '\\n\\n④サブリース会社判定結果\U0001F3E2：不明\\n\\n'\n    answer += '</details>'\n\
          \n    return {\n        \"result\": answer\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 文章生成_会社判定結果_ジャックス
        type: code
        variables:
        - value_selector:
          - '1744189485278'
          - result
          variable: is_intermediary_ng
        - value_selector:
          - '17441822209360'
          - intermediary_company
          variable: intermediary_company
        - value_selector:
          - '17441897532970'
          - result
          variable: is_management_ng
        - value_selector:
          - '17441822209360'
          - building_management_company
          variable: bldg_management_company
        - value_selector:
          - '17441897528330'
          - result
          variable: is_sublease_ng
        - value_selector:
          - '17441822209360'
          - subleasing_company
          variable: subleasing_company
        - value_selector:
          - '17442532478970'
          - result
          variable: is_intermediary_ng_sub
        - value_selector:
          - '17442545168830'
          - result
          variable: is_management_ng_sub
        - value_selector:
          - '17442545168830'
          - result
          variable: is_sublease_ng_sub
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 53
      id: '1744190071662'
      position:
        x: 4106.67312363138
        y: 892.9649335709377
      positionAbsolute:
        x: 4106.67312363138
        y: 892.9649335709377
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - iyI74NydcXiyrkQyZ2A4Kyylfj/i15XeMHXH2xhPaUEoHzaBaKyNfYmIUT1VZunH
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.55
          top_k: 2
          weights:
            keyword_setting:
              keyword_weight: 0.1
            vector_setting:
              embedding_model_name: cohere.embed-multilingual-v3
              embedding_provider_name: langgenius/bedrock/bedrock
              vector_weight: 0.9
        query_variable_selector:
        - '1744714301158'
        - result
        retrieval_mode: multiple
        selected: false
        title: NG仲介会社dbから類似検索_ジャックス
        type: knowledge-retrieval
      height: 91
      id: '17442514526600'
      position:
        x: 2594.3362577330986
        y: 813.852492467629
      positionAbsolute:
        x: 2594.3362577330986
        y: 813.852492467629
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - iyI74NydcXiyrkQyZ2A4Kyylfj/i15XeMHXH2xhPaUEoHzaBaKyNfYmIUT1VZunH
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.55
          top_k: 2
          weights:
            keyword_setting:
              keyword_weight: 1
            vector_setting:
              embedding_model_name: cohere.embed-multilingual-v3
              embedding_provider_name: langgenius/bedrock/bedrock
              vector_weight: 0
        query_variable_selector:
        - '17447659678820'
        - result
        retrieval_mode: multiple
        selected: false
        title: NG建物管理会社dbから類似検索_ジャックス
        type: knowledge-retrieval
      height: 91
      id: '17442514962300'
      position:
        x: 2598.3732815603958
        y: 1006.3425484457541
      positionAbsolute:
        x: 2598.3732815603958
        y: 1006.3425484457541
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - iyI74NydcXiyrkQyZ2A4Kyylfj/i15XeMHXH2xhPaUEoHzaBaKyNfYmIUT1VZunH
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: 0.55
          top_k: 2
          weights:
            keyword_setting:
              keyword_weight: 1
            vector_setting:
              embedding_model_name: cohere.embed-multilingual-v3
              embedding_provider_name: langgenius/bedrock/bedrock
              vector_weight: 0
        query_variable_selector:
        - '17447660019650'
        - result
        retrieval_mode: multiple
        selected: false
        title: NGサブリース会社dbから類似検索_ジャックス
        type: knowledge-retrieval
      height: 91
      id: '17442515043620'
      position:
        x: 2598.3732815603958
        y: 1187.2067757553898
      positionAbsolute:
        x: 2598.3732815603958
        y: 1187.2067757553898
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 21a0a212-f5ee-474d-9e1d-c6090ee93747
            value: ''
            varType: array[object]
            variable_selector:
            - '1744189356658'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE_仲介会社_ジャックス
        type: if-else
      height: 125
      id: '1744253042636'
      position:
        x: 2295.3732815603958
        y: 874.4252863527863
      positionAbsolute:
        x: 2295.3732815603958
        y: 874.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 類似検索結果json化_仲介会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '17442514526600'
          - result
          variable: arg1
      height: 53
      id: '17442532478970'
      position:
        x: 2906.121624223417
        y: 813.852492467629
      positionAbsolute:
        x: 2906.121624223417
        y: 813.852492467629
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 21a0a212-f5ee-474d-9e1d-c6090ee93747
            value: ''
            varType: array[object]
            variable_selector:
            - '17441895123880'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE_建物管理会社_ジャックス
        type: if-else
      height: 125
      id: '17442544290430'
      position:
        x: 2295.3732815603958
        y: 1038.4252863527863
      positionAbsolute:
        x: 2295.3732815603958
        y: 1038.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: 21a0a212-f5ee-474d-9e1d-c6090ee93747
            value: ''
            varType: array[object]
            variable_selector:
            - '17441895565890'
            - result
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE_サブリース会社_ジャックス
        type: if-else
      height: 125
      id: '17442544310300'
      position:
        x: 2295.3732815603958
        y: 1202.4252863527863
      positionAbsolute:
        x: 2295.3732815603958
        y: 1202.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 類似検索結果json化_建物管理会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '17442514962300'
          - result
          variable: arg1
      height: 53
      id: '17442545166910'
      position:
        x: 2901.3732815603958
        y: 1006.3425484457541
      positionAbsolute:
        x: 2901.3732815603958
        y: 1006.3425484457541
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: dict):\n    try:\n        row = str(arg1[0][\"content\"\
          ])\n        company_name = row.split(';')[0].split(': ')[1]\n        category\
          \ = row.split(';')[1].split(': ')[1]\n        print(\"OK\")\n        return\
          \ {\"result\": {\n            \"status\":\"OK\",\n            \"company_name\"\
          : company_name,\n            \"category\": category\n            }\n   \
          \         }\n    except Exception as e:\n        return {\"result\": {\n\
          \            \"status\":\"Fail\",\n            \"company_name\": \"\",\n\
          \            \"category\": \"\"\n        }\n        }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: object
        selected: false
        title: 類似検索結果json化_サブリース会社_ジャックス
        type: code
        variables:
        - value_selector:
          - '17442515043620'
          - result
          variable: arg1
      height: 53
      id: '17442545168830'
      position:
        x: 2901.3732815603958
        y: 1187.2067757553898
      positionAbsolute:
        x: 2901.3732815603958
        y: 1187.2067757553898
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: t_kokusho
        desc: ''
        height: 393
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・不動産仲介会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社ビンデン","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・賃貸管理会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社コミュニティサービス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"リアリティマネージメント株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 240
      height: 393
      id: '1744278689866'
      position:
        x: 2073.901420030928
        y: -700.410887595458
      positionAbsolute:
        x: 2073.901420030928
        y: -700.410887595458
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        author: t_kokusho
        desc: ''
        height: 490
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"
          ・不動産仲介会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社FRAT","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社スプリングエステート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"クレエ株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社LEAF","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社楽人ホールディングス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社PLEAST","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"レントサポート株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社YCMリアルエステートインターナショナル
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・建物管理会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"（株）プレストサービス（プレサンスではない）","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・サブリース会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社リブマックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"アムスインターナショナル株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社ロイズ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"START
          スタート ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・賃貸管理会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社スプリングエステート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社エレマックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社LEAF","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社アスヴェル","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社エイペックスコミュニティ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社ジー・ゲート","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社サンビルド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"然総合管理株式会社
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・賃借人","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社リブ・マックス","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"株式会社青山メインランド","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"・売主","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Trees株式会社","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 240
      height: 490
      id: '1744278725348'
      position:
        x: 2841.8861341046186
        y: -797.9507966616436
      positionAbsolute:
        x: 2841.8861341046186
        y: -797.9507966616436
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: "入力：\n@article_info => 物件情報が載った文章 : string\n\n処理：\n文章に対し、パラメータ抽出しやすいLLMに構造化させる\n\
          \n出力:\ntext => 構造化された物件情報 : string\n例. \n都道府県：東京都\n最寄駅①：白金高輪駅\n最寄り駅①までの徒歩分数：10"
        model:
          completion_params: {}
          mode: chat
          name: gemini-2.5-flash
          provider: langgenius/gemini/google
        prompt_template:
        - id: 015a18e4-7d97-447d-ae78-ba9666ba9d43
          role: system
          text: '入力された情報を構造化して整理してください。

            下記のフォーマットに従って、出力してください。フォーマット以外の体裁を絶対入れないように注意してください。====がありますがこれも指定のフォーマットです。

            記載がない項目については"不明"で値を記述してください。


            # フォーマット


            ==================================


            **💉抽出した物件情報💉**


            <details>


            物件名：{値}

            所在地：{値}

            エリア：{所在地から、"関東"or"関西"or"九州"or"東北"のいずれかを出力してください}

            最寄駅１：{値}駅

            最寄駅１までの徒歩分数：{値}

            最寄駅２：{値}駅

            最寄駅２までの徒歩分数：{値}

            所在階：{値}

            地上階層：{値}

            建物構造：{値}

            総戸数：{値}

            築年月：{値}

            築年数：{築年月と現在の日付から算出}

            専有面積：{値}

            エレベータ有無：{値}

            室内洗濯機置き場有無：{値}

            バスルームタイプ：{値}

            仲介会社名：{値}

            現況：{値}

            サブリース会社名：{値}

            建物管理会社名：{値}

            賃料：{値}

            修繕積立金：{値}

            管理費：{値}

            その他費用：{値}


            </details>'
        - id: f3f67480-9e6b-40e6-b6bb-d33947d9afc0
          role: user
          text: '{{#1742781950109.article_info#}}'
        selected: false
        title: 文章構造化
        type: llm
        variables: []
        vision:
          enabled: false
      height: 325
      id: '1744282688828'
      position:
        x: -2821.81698932392
        y: 111.85621477647405
      positionAbsolute:
        x: -2821.81698932392
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(footprint: int, repair_reserve_fund: float):\n    if footprint\
          \ != 0 and repair_reserve_fund !=0:\n        return {\n            \"result\"\
          : repair_reserve_fund/footprint,\n        }\n    else:\n        return {\n\
          \            \"result\": 9999,\n        }"
        code_language: python3
        desc: "入力: \n@footprint => 専有面積: Float\n@repair_reserve_fund => 修繕積立金 : Int\n\
          \n処理: \n平米あたり修繕積立金の算出\n\n出力:\n@result => 平米あたり修繕積立金 : Float"
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: 平米あたり修繕積立金算出
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - footprint
          variable: footrpint
        - value_selector:
          - '17441822209360'
          - repair_reserve_fund
          variable: repair_reserve_fund
      height: 241
      id: '1744356775720'
      position:
        x: 4542.024490640405
        y: 1038.4252863527863
      positionAbsolute:
        x: 4542.024490640405
        y: 1038.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(age_of_building: int, repair_fund_per_footprint: float,\
          \ area: str, repair_reserve_fund: int) -> dict:\n    if age_of_building\
          \ <=10 and repair_fund_per_footprint <60 and area == \"関東\" and repair_reserve_fund!=0:\n\
          \            return{\n                \"result\": 300000\n            }\n\
          \    elif age_of_building <=20 and repair_fund_per_footprint <80 and area\
          \ == \"関東\" and repair_reserve_fund!=0:\n            return{\n         \
          \       \"result\": 300000\n            }\n    else:\n        return {\n\
          \            \"result\": 0\n            }\n"
        code_language: python3
        desc: '入力:

          @age_ob_building => 築年数 : Int

          @repair_fund_per_footprint => 平米あたり修繕積立金 : Int

          @area => エリア : String

          @repair_reserve_fund => 修繕積立金 : Int


          処理:

          エリアが関東の場合、築年数10年以下かつ平米当たり修繕積立金が60円未満又は、築年数10~20年かつ平米当たり修繕積立金が80円未満の場合、300,000円を計上。その他の場合、0円を計上


          出力:

          @result => 修繕積立補填金相当額 : Int'
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: 修繕積立補填金算出
        type: code
        variables:
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '1744356775720'
          - result
          variable: repair_fund_per_footprint
        - value_selector:
          - '17441822209360'
          - area
          variable: area
        - value_selector:
          - '17441822209360'
          - repair_reserve_fund
          variable: repair_reserve_fund
      height: 353
      id: '1744358049174'
      position:
        x: 4851.517006391403
        y: 1038.4252863527863
      positionAbsolute:
        x: 4851.517006391403
        y: 1038.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(current_status: str, rental_price: str) -> dict:\n    if\
          \ current_status == \"空室\":\n        return {\n            \"result\": rental_price\
          \ * 3,\n        }\n    else:\n        return {\n            \"result\":\
          \ 0,\n        }\n"
        code_language: python3
        desc: "入力:\n@rental_price => 賃料 : Int\n@current_status => 現況: String\n\n処理:\
          \ \n空室の場合、賃料 * 3相当の空室手当を計上。その他の場合、0円を計上。\n\n\n出力: \n@result => 空室手当相当額 :\
          \ Int"
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: 空室手当算出
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
        - value_selector:
          - '17441822209360'
          - rental_price
          variable: rental_price
      height: 241
      id: '1744358257922'
      position:
        x: 4851.517006391403
        y: 586.7172261644548
      positionAbsolute:
        x: 4851.517006391403
        y: 586.7172261644548
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(bath_room_type: str) -> dict:\n    if bath_room_type ==\
          \ \"3点ユニット\":     \n        return {\n            \"result\": 200000,\n\
          \        }\n    else:\n        return {\n            \"result\": 0,\n  \
          \      }       \n"
        code_language: python3
        desc: "入力:\n@bath_room_type => バスルームタイプ : String\n\n処理: \n3点ユニットの場合200,000円の引当金計上。その他の場合、0円を計上\n\
          \n\n出力: \n@result => 3点ユニット引当金相当額 : Int"
        outputs:
          result:
            children: null
            type: number
        selected: false
        title: ３点ユニット引当金算出
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - bathroom_type
          variable: bath_room_type
      height: 257
      id: '1744358735699'
      position:
        x: 4851.517006391403
        y: 164.24487884452913
      positionAbsolute:
        x: 4851.517006391403
        y: 164.24487884452913
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(bath_allowance: int, vacancy_allowance: int, repair_fund_compensation:\
          \ int, rental_price:int, repair_fund_per_footprint: float) -> dict:\n  \
          \  answer = f'<span style=\"color: white; background-color: #0066FF; padding:\
          \ 2px 6px; border-radius: 4px;\">その他補填費用の発生有無\U0001F4B8</span>\\n'\n\n \
          \   answer += f'\\n発生費用額： {repair_fund_compensation + bath_allowance + vacancy_allowance}'\n\
          \n    answer += f'\\n<details>\\n'\n    if repair_fund_compensation != 0:\n\
          \        answer += f'\\n・修繕積立補填金：{repair_fund_compensation}円が発生します。\\n'\n\
          \        answer += f'\\n　→参考情報：平米あたり修繕積立金：{repair_fund_per_footprint}円\\\
          n'\n    if bath_allowance != 0:\n        answer += f'\\n・３点ユニット引当金：{bath_allowance}円が発生します。\\\
          n'\n    if vacancy_allowance != 0:\n        answer += f'\\n・空室手当：{vacancy_allowance}円が発生します。\\\
          n'\n        answer += f'\\n　→参考情報：賃料：{rental_price}円の3ヶ月分\\n'\n    answer\
          \ += f'\\n</details>\\n'\n\n    return {\n        \"result\": answer,\n\
          \    }\n"
        code_language: python3
        desc: '入力:

          @bath_allowance => 3点ユニット引当金 : Int

          @vacancy_allowance => 空室手当 : Int

          @repair_fund_compensation => 修繕補填金 : Int

          @repair_fund_per_footprint => 平米あたり修繕積立金 : Int

          @retal_price => 賃料: Int


          処理:

          その他補填費用関連の出力用文章を作成


          出力:

          @result => その他補填費用関連の出力用文章 : String'
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 文章生成__補填費用
        type: code
        variables:
        - value_selector:
          - '1744358735699'
          - result
          variable: bath_allowance
        - value_selector:
          - '1744358257922'
          - result
          variable: vacancy_allowance
        - value_selector:
          - '1744358049174'
          - result
          variable: repair_fund_compensation
        - value_selector:
          - '1744356775720'
          - result
          variable: repair_fund_per_footprint
        - value_selector:
          - '17441822209360'
          - rental_price
          variable: rental_price
      height: 337
      id: '1744359151278'
      position:
        x: 5234.0823690990455
        y: 164.24487884452913
      positionAbsolute:
        x: 5234.0823690990455
        y: 164.24487884452913
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: dict, arg2: dict, arg3: dict, arg4: dict, station1:\
          \ str, station2: str, area: str, walk_minute_to_station1: int, current_status:\
          \ str, rental_price: int, age_of_building: int, repair_reserve_fund:int,\
          \ administrative_cost:int, other_cost:int, repair_fund_compensation: int,\
          \ vacancy_allowance:int, bath_allowance:int, better_station_num: int, rank:\
          \ str, rate: float, prefecture : str) -> dict:\n    \n    answer = f'\\\
          n<span style=\"color: white; background-color: #0066FF; padding: 2px 6px;\
          \ border-radius: 4px;\">利回りと査定額算出\U0001F4B0</span>\\n'\n\n    if better_station_num\
          \ == 0 or rate == 0:\n        answer += f'\\n> 利回り算出不可'\n        answer\
          \ += f'\\n<details>\\n'\n        answer += f\"\\n最寄駅①：{station1}と最寄駅②：{station2}\\\
          n\"\n        if prefecture == \"福岡県\":\n            answer += f\"福岡県の物件は利回りが不明です。\"\
          \n        else:\n            answer += f\"ジャックスでは取り扱えない駅、もしくは利回り算出不可な築年数である可能性があります。\"\
          \n        answer += f'\\n</details>\\n'\n    else:\n        if better_station_num\
          \ == 1:\n            better_station = station1\n        else:\n        \
          \    better_station = station2\n        \n        rate_for_display = rate\n\
          \            \n        if walk_minute_to_station1 <= 4:\n            rate_for_display\
          \ = f'{float(rate) - 0.1}%（※{rate} - 0.1）'\n            rate -= 0.1\n  \
          \      if current_status == \"サブリース中\":\n            rental_price = int(rental_price/0.9)\n\
          \            rental_price = (rental_price//100)*100\n\n        appraised_value\
          \ = int((rental_price - repair_reserve_fund - administrative_cost - other_cost)*12\
          \ / (rate/100))\n        appraised_value = (appraised_value // 100000) *\
          \ 100000\n        \n        if current_status == \"サブリース中\":\n         \
          \   purchase_price = int(appraised_value*0.85 + repair_fund_compensation\
          \ + vacancy_allowance + bath_allowance)\n        else:\n            purchase_price\
          \ = int(appraised_value*0.9 + repair_fund_compensation + vacancy_allowance\
          \ + bath_allowance)\n        purchase_price = (purchase_price  // 100000)\
          \ * 100000\n\n        answer += f'\\n ・利回り：{rate_for_display}'\n       \
          \ answer += f'\\n ・机上評価額：{\"{:,}\".format(appraised_value)}円'\n        answer\
          \ += f'\\n ・机上仕入額（粗利10%想定）：'\n        answer += f'{\"{:,}\".format(purchase_price)}円\\\
          n'\n        answer += f'\\n<details>\\n'\n        answer += f\"\\n・最寄駅：{better_station}\\\
          n\"\n        answer += f\"\\n・駅ランク：{rank}\\n\"\n        answer += f\"\\\
          n・築年数：{age_of_building}\\n\"\n        answer += f\"\\n・利回り：{rate_for_display}\\\
          n\"\n        answer += f'\\n・机上評価額：'\n        answer += f'{\"{:,}\".format(appraised_value)}円\\\
          n'\n        if current_status == \"サブリース中\":\n            answer += f'\\\
          n・机上仕入額（粗利15%想定）：'\n        else:\n            answer += f'\\n・机上仕入額（粗利10%想定）：'\n\
          \        answer += f'{\"{:,}\".format(purchase_price)}円\\n'\n        answer\
          \ += f'\\n<details>\\n'\n        answer += f'\\n机上評価額 = ({\"割戻\" if current_status\
          \ == \"サブリース中\" else \"\"}賃料 - 修繕積立金 - 管理費 - その他費用) * 12 / 利回り\\n'\n   \
          \     answer += f'\\n　　　　　 = ({\"{:,}\".format(rental_price)} - {\"{:,}\"\
          .format(repair_reserve_fund)} - {\"{:,}\".format(administrative_cost)} -\
          \ {\"{:,}\".format(other_cost)}) * 12 / {rate/100}\\n'\n        if current_status\
          \ == \"サブリース中\":\n            answer += f'\\n机上仕入額 = 机上評価額 * 0.85 - 修繕積立補填金\
          \ - 3点ユニット引当金 - 空室手当\\n'\n            answer += f'\\n　　　　　 = {\"{:,}\".format(appraised_value)}\
          \ * 0.85 - {\"{:,}\".format(repair_fund_compensation)} - {\"{:,}\".format(bath_allowance)}\
          \ - {\"{:,}\".format(vacancy_allowance)}\\n'\n        else:\n          \
          \  answer += f'\\n机上仕入額 = 机上評価額 * 0.9 - 修繕積立補填金 - 3点ユニット引当金 - 空室手当\\n'\n\
          \            answer += f'\\n　　　　　 = {\"{:,}\".format(appraised_value)} *\
          \ 0.9 - {\"{:,}\".format(repair_fund_compensation)} - {\"{:,}\".format(bath_allowance)}\
          \ - {\"{:,}\".format(vacancy_allowance)}\\n'\n            \n        answer\
          \ += f'\\n</details>\\n'\n\n        answer += f'\\n</details>\\n'\n    \
          \    \n    return {\n        \"result\": answer,\n        \"rank\":rank\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          rank:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 文章生成__利回り判定結果_ジャックス
        type: code
        variables:
        - value_selector:
          - '1744361311304'
          - result
          variable: arg1
        - value_selector:
          - '17441822209360'
          - area
          variable: area
        - value_selector:
          - '1744945587153'
          - station1_normed
          variable: station1
        - value_selector:
          - '17441822209360'
          - walk_minute_to_station1
          variable: walk_minute_to_station1
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
        - value_selector:
          - '17441822209360'
          - rental_price
          variable: rental_price
        - value_selector:
          - '17441822209360'
          - repair_reserve_fund
          variable: repair_reserve_fund
        - value_selector:
          - '17441822209360'
          - administrative_cost
          variable: administrative_cost
        - value_selector:
          - '17441822209360'
          - other_cost
          variable: other_cost
        - value_selector:
          - '1744358049174'
          - result
          variable: repair_fund_compensation
        - value_selector:
          - '1744358257922'
          - result
          variable: vacancy_allowance
        - value_selector:
          - '1744358735699'
          - result
          variable: bath_allowance
        - value_selector:
          - '17443835493504'
          - result
          variable: arg2
        - value_selector:
          - '1744945587153'
          - station2_normed
          variable: station2
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '1744985088407'
          - better_station_num
          variable: better_station_num
        - value_selector:
          - '1744985088407'
          - rank
          variable: rank
        - value_selector:
          - '1744985088407'
          - rate
          variable: rate
        - value_selector:
          - '17503030598800'
          - result
          variable: arg3
        - value_selector:
          - '17503030765170'
          - result
          variable: arg4
        - value_selector:
          - '17441822209360'
          - prefecture
          variable: prefecture
      height: 53
      id: '1744360071507'
      position:
        x: 9573.581368568863
        y: 162.1810733248418
      positionAbsolute:
        x: 9573.581368568863
        y: 162.1810733248418
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - BZ0ZGECEQx1jlZ1gjNF/R3lQ7d7x289OUcyr2KwVtLaAYnteRJe7WOxYPx/ZABDS
        desc: '入力：

          @station1 => 最寄り駅① : string

          @station2 => 最寄り駅② : string


          処理：


          出力:

          @result => クエリ結果が入ったjson : json'
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          top_k: 4
        query_variable_selector:
        - '17527266387020'
        - result
        retrieval_mode: multiple
        selected: false
        title: 駅ランク取得_関東
        type: knowledge-retrieval
      height: 247
      id: '1744360121607'
      position:
        x: -238.43844533806362
        y: 146.44809566618642
      positionAbsolute:
        x: -238.43844533806362
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result: dict):\n    try:\n        row = str(result[0][\"\
          content\"])\n        rank = row.split(';')[2].split(': ')[1]\n        ap_rank_base\
          \ = float(row.split(';')[3].split(': ')[1])\n        ap_rank_special = (row.split(';')[4].split(':\
          \ ')[1] == \"1.0\")\n        return {\n            \"status\":\"OK\",\n\
          \            \"rank\": rank, \n            \"ap_rank_base\": ap_rank_base,\n\
          \            \"ap_rank_special\": ap_rank_special\n            }\n    except\
          \ Exception as e:\n        return {\n            \"status\":\"FAIL\",\n\
          \            \"rank\": \"NG\",\n            \"ap_rank_base\": 9999,\n  \
          \          \"ap_rank_special\": False\n            }"
        code_language: python3
        desc: "入力：\n@result => クエリ結果のjson : json\n\n処理：\njsonオブジェクトから、各項目をパラメータとして抽出する\n\
          \n出力:\n@status => クエリ検索が成功したか : string\n@rank => ジャックスランク : String\n@ap_rank_base\
          \ =>  APランク : Float\n@ap_raank_special => カテ1特例の有無 : Boolean\n\n例. \nstatus\
          \ = \"OK\"\nrank = \"A\"\nap_rank_base = 1.5\nap_rank_special = False"
        outputs:
          ap_rank_base:
            children: null
            type: number
          ap_rank_special:
            children: null
            type: number
          rank:
            children: null
            type: string
          status:
            children: null
            type: string
        selected: false
        title: クエリ結果から値抽出_関東_最寄り駅①
        type: code
        variables:
        - value_selector:
          - '1744360121607'
          - result
          variable: result
      height: 385
      id: '1744360238139'
      position:
        x: 96.2144223847838
        y: 146.44809566618642
      positionAbsolute:
        x: 96.2144223847838
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(status: str, rank : str, age_of_building: int) -> dict:\n\
          \    if status == \"OK\":\n        return {\n        \"query_for_getting_yied\"\
          : f'ランク: {rank};築年数: {age_of_building}',\n        }\n    else:\n       \
          \ return {\n        \"query_for_getting_yied\": 'abcdefghijklmnopqrstuvwxyz'\n\
          \        }\n\n    \n"
        code_language: python3
        desc: '入力：

           @status => 駅ランク取得のクエリが成功したか否か : string

          @age_of_building => 築年数 : int

          @rank => 駅ランク（ジャックス評価） : string


          処理：

          入力値から、利回りを検索するためのクエリを作成する


          出力:

          @query_for_getting_yied => クエリ用テキスト : string'
        outputs:
          query_for_getting_yied:
            children: null
            type: string
        selected: false
        title: クエリ作成（関東）
        type: code
        variables:
        - value_selector:
          - '1744360238139'
          - status
          variable: status
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '1744360238139'
          - rank
          variable: rank
      height: 289
      id: '1744361040220'
      position:
        x: 400.6275763077881
        y: 146.44809566618642
      positionAbsolute:
        x: 400.6275763077881
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - 8N25vTqzQRCKWHhGqPVhMza742xnv7pbkBJRgq91aTXJnxINxipL91zfxNRpHg/o
        desc: "入力：\n@query_for_getting_yield => 利回り検索用クエリ : string\n例. \nquery_for_getting_yield\
          \ = \"ランク: S;築年数: 18\"\n\n処理：\n利回りを取得\n\n出力:\n@result => クエリ結果が入ったjson :\
          \ json"
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          top_k: 4
        query_variable_selector:
        - '1744361040220'
        - query_for_getting_yied
        retrieval_mode: multiple
        selected: false
        title: 利回り取得_関東
        type: knowledge-retrieval
      height: 311
      id: '1744361251036'
      position:
        x: 726.6442750844396
        y: 146.44809566618642
      positionAbsolute:
        x: 726.6442750844396
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_yield: str) -> dict:\n    try:\n        row = str(result_yield[0][\"\
          content\"])\n        rank = row.split(';')[0].split(': ')[1]\n        rate\
          \ = float(row.split(';')[2].split(': ')[1])\n        return {\n        \
          \    \"status\":\"OK\",\n            \"rate\": rate\n            }\n   \
          \ except Exception as e:\n        return {\n            \"status\":\"FAIL\"\
          ,\n            \"rate\":9999\n                }\n"
        code_language: python3
        desc: "入力：\n@result => クエリ結果のjson\n\n処理：\njsonオブジェクトから、各項目をパラメータとして抽出する\n\n\
          出力:\n@status => クエリ検索が成功したか : string\n@rate => ジャックス利回り : Float\n\n例. \n\
          status = \"OK\"\nrate = 3.45"
        outputs:
          rate:
            children: null
            type: number
          status:
            children: null
            type: string
        selected: false
        title: 利回り算出_関東_最寄駅①
        type: code
        variables:
        - value_selector:
          - '1744361251036'
          - result
          variable: result_yield
      height: 305
      id: '1744361311304'
      position:
        x: 1035.1497839850363
        y: 146.44809566618642
      positionAbsolute:
        x: 1035.1497839850363
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_category: str, result_property: str, result_company:\
          \ str, result_othercost: str, result_price: str, result_menseki: str, basic_info:\
          \ str) -> dict:\n    return {\n        \"result\": '<div style=\"border:\
          \ 1px solid #e0e0e0; border-radius: 8px; padding: 20px; margin-bottom: 16px;\
          \ box-shadow: 0 4px 8px rgba(0,0,0,0.1); background: #e1e5f2;\">' + '<h2\
          \ style=\"color = #ffffff\";>\U0001F3E6<b>ジャックス判定基準</b>\U0001F3E6</h2>'\n\
          \        # + '<div style=\"padding:15px; margin:16px 0; background-color:#f6ffed;\
          \ border:1px solid #b7eb8f; border-radius:8px;\">' + result_menseki + '</div>'\n\
          \        + '<div style=\"border: 1px solid #e0e0e0; border-radius: 8px;\
          \ padding: 20px; margin-bottom: 16px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\
          \ background-color: #ffffff;\">' + result_category + '</div>'\n        +\
          \ '<div style=\"border: 1px solid #e0e0e0; border-radius: 8px; padding:\
          \ 20px; margin-bottom: 16px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); background-color:\
          \ #ffffff;\">' + result_property + '</div>'\n        + '<div style=\"border:\
          \ 1px solid #e0e0e0; border-radius: 8px; padding: 20px; margin-bottom: 16px;\
          \ box-shadow: 0 4px 8px rgba(0,0,0,0.1); background-color: #ffffff;\">'\
          \ + result_company + '</div>'\n        + '<div style=\"border: 1px solid\
          \ #e0e0e0; border-radius: 8px; padding: 20px; margin-bottom: 16px; box-shadow:\
          \ 0 4px 8px rgba(0,0,0,0.1); background-color: #ffffff;\">' + result_othercost\
          \ + '</div>'\n        + '<div style=\"border: 1px solid #e0e0e0; border-radius:\
          \ 8px; padding: 20px; margin-bottom: 16px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);\
          \ background-color: #ffffff;\">' + result_price + '</div>'\n         + '</div>'\n\
          \        + basic_info\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 最終結合
        type: code
        variables:
        - value_selector:
          - '1744282688828'
          - text
          variable: basic_info
        - value_selector:
          - '1744887463772'
          - result
          variable: result_property
        - value_selector:
          - '1744190071662'
          - result
          variable: result_company
        - value_selector:
          - '1744360071507'
          - result
          variable: result_price
        - value_selector:
          - '1744979899122'
          - result
          variable: result_category
        - value_selector:
          - '1744359151278'
          - result
          variable: result_othercost
        - value_selector:
          - '1750649253442'
          - result
          variable: result_menseki
      height: 53
      id: '1744380192035'
      position:
        x: 10036.344374317132
        y: 164.24487884452913
      positionAbsolute:
        x: 10036.344374317132
        y: 164.24487884452913
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - BZ0ZGECEQx1jlZ1gjNF/R3lQ7d7x289OUcyr2KwVtLaAYnteRJe7WOxYPx/ZABDS
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          top_k: 4
        query_variable_selector:
        - '17527267178200'
        - result
        retrieval_mode: multiple
        selected: false
        title: 駅ランク取得_関東②
        type: knowledge-retrieval
      height: 91
      id: '17443835493500'
      position:
        x: -238.43844533806362
        y: 575.5125912189224
      positionAbsolute:
        x: -238.43844533806362
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - 8N25vTqzQRCKWHhGqPVhMza742xnv7pbkBJRgq91aTXJnxINxipL91zfxNRpHg/o
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          top_k: 4
        query_variable_selector:
        - '17536789121950'
        - query_for_getting_yied
        retrieval_mode: multiple
        selected: false
        title: 利回り取得_関東②
        type: knowledge-retrieval
      height: 91
      id: '17443835493503'
      position:
        x: 726.6442750844396
        y: 575.5125912189224
      positionAbsolute:
        x: 726.6442750844396
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: t_kokusho
        desc: ''
        height: 615
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"font-size:
          16px;","text":"オリックス用処理","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1,"textStyle":"font-size:
          16px;"}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 240
      height: 615
      id: '1744683766343'
      position:
        x: -1047.9080871478982
        y: 2407.4476058972045
      positionAbsolute:
        x: -1047.9080871478982
        y: 2407.4476058972045
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 240
    - data:
        code: "\ndef main(walk_minute_to_station1: int, station1_normed:str) -> dict:\n\
          \    if station1_normed == \"不明\":\n        return{\n            \"result\"\
          :\"\",\n            \"is_ng\":0\n\n        }\n    if walk_minute_to_station1\
          \ >=15:\n        return {\n        \"result\": f'・徒歩分数①：NG❌\\n　→元情報：{station1_normed}駅、{walk_minute_to_station1}\\\
          n　→理由　：徒歩分数が{walk_minute_to_station1}分であるためNGです。\\n',\n        \"is_ng\"\
          :1\n    }\n    elif walk_minute_to_station1 >= 13:\n        return {\n \
          \       \"result\": f'・徒歩分数①：要確認☑️\\n　→元情報：{station1_normed}駅、{walk_minute_to_station1}\\\
          n　→理由　：徒歩分数が{walk_minute_to_station1}分であるため依頼必須です。\\n',\n        \"is_ng\"\
          :2\n    }\n    else:\n        return {\n            \"result\":f'・最寄駅①と徒歩分数①：OK⭕️\\\
          n　→元情報：{station1_normed}、{walk_minute_to_station1}\\n　→理由　：徒歩分数が{walk_minute_to_station1}分であるためOKです。\\\
          n',\n            \"is_ng\":0\n        }\n"
        code_language: python3
        desc: "入力:\n@walk_minute_to_station1 => 最寄り駅①までの徒歩分数\n@station1_normed =>\
          \ 正規化された最寄り駅①\n\n処理: \n最寄り駅①への徒歩分数に関するジャックスNG判定\n\n出力\n@is_ng => NGか否か :\
          \ Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 駅①徒歩分数判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - walk_minute_to_station1
          variable: walk_minute_to_station1
        - value_selector:
          - '1744945587153'
          - station1_normed
          variable: station1_normed
      height: 273
      id: '1744708430422'
      position:
        x: 1686.1940524236368
        y: 140.92497958142914
      positionAbsolute:
        x: 1686.1940524236368
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(stories_high: int, is_elevator_exist: str) -> dict:\n  \
          \  if stories_high>=3:\n        if is_elevator_exist == \"なし\":\n      \
          \      return {\n                \"result\": f'・地上階層とエレベータ有無：NG❌\\n　→元情報：{stories_high}階、エレベータ{is_elevator_exist}\\\
          n　→理由　：地上階層が{stories_high}であるにも関わらず、エレベータ{is_elevator_exist}のため\\n',\n \
          \               \"is_ng\": 1\n        }\n        elif is_elevator_exist\
          \ == \"未指定\" or is_elevator_exist == \"不明\":\n            return{\n    \
          \            \"result\" : \n                f'・地上階層とエレベータ有無：要確認☑️\\n　→元情報：{stories_high}階、エレベータ{is_elevator_exist}\\\
          n　→理由　：地上階層が{stories_high}であるため、エレベータ有が必須の条件となります。ご確認ください。\\n',\n      \
          \          \"is_ng\": 2\n            }\n    return{\n        \"result\"\
          \ : f'・地上階層とエレベータ有無：OK⭕\\n　→元情報：{stories_high}階、エレベータ{is_elevator_exist}\\\
          n',\n        \"is_ng\": 0\n        }"
        code_language: python3
        desc: "入力: \n@stories_high => 地上階層 : Int\n@is_elevator_exist =>  エレベータの有無\
          \ : String\n\n処理: \n地上階層に応じたエレベータ有無についてジャックスNG判定\n\n出力: \n@is_ng => NGか否か\
          \ : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: エレベータ有無判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - stories_high
          variable: stories_high
        - value_selector:
          - '17441822209360'
          - is_elevator_exist
          variable: is_elevator_exist
      height: 257
      id: '1744708669708'
      position:
        x: 1967.9219466669654
        y: 440.3258035069231
      positionAbsolute:
        x: 1967.9219466669654
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(indoor_washing_machine_storage: str) -> dict:\n    if indoor_washing_machine_storage\
          \ == \"なし\":\n        return {\n            \"result\": f'・室内洗濯機置き場：要確認☑️\\\
          n　→元情報：{indoor_washing_machine_storage}\\n　→理由　：室内洗濯機置き場{indoor_washing_machine_storage}のため個別相談です。',\n\
          \            \"is_ng\": 2,\n                }\n    elif indoor_washing_machine_storage\
          \ == \"未指定\":\n        return{\n            \"result\": f'・室内洗濯機置き場：要確認☑️\\\
          n　→元情報：{indoor_washing_machine_storage}\\n　→理由　：室内洗濯機置き場{indoor_washing_machine_storage}のため要確認です。',\n\
          \            \"is_ng\": 2,\n            }\n    else:\n        return{\n\
          \            \"result\": f'・室内洗濯機置き場：OK⭕\\n　→元情報：{indoor_washing_machine_storage}\\\
          n',\n            \"is_ng\": 0,\n            }"
        code_language: python3
        desc: "入力: \n@indoor_washing_machine_storage => 室内洗濯機置き場の有無 : String\n\n処理:\
          \ \n室内洗濯機置き場の有無についてジャックスNG判定\n\n出力:\n@is_ng => NGか否か : Boolean\n@result\
          \ => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 室内洗濯機置き場判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - indoor_washing_machine_storage
          variable: indoor_washing_machine_storage
      height: 241
      id: '1744709170101'
      position:
        x: 2286.8949492473657
        y: 140.92497958142914
      positionAbsolute:
        x: 2286.8949492473657
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(floor: int) -> dict:\n    if floor == 1:\n        return\
          \ {\n            \"result\": f'・所在階：：要確認☑️\\n　→元情報：{floor}階\\n　→理由　：防犯・視覚ストレスがないかを確認してください。',\n\
          \            \"is_ng\":2\n            }\n    else:\n        return {\n \
          \           \"result\": f'・所在階：：OK⭕\\n　→元情報：{floor}階\\n',\n            \"\
          is_ng\":0\n        }\n"
        code_language: python3
        desc: "入力: \n@floor => 所在階 : Int\n\n処理: \n所在階についてジャックスNG判定\n\n出力:\n@is_ng\
          \ => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 所在階判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - floor
          variable: floor
      height: 209
      id: '1744709515205'
      position:
        x: 2286.8949492473657
        y: 440.3258035069231
      positionAbsolute:
        x: 2286.8949492473657
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - intermediary_company
          variable: arg1
      height: 53
      id: '1744714301158'
      position:
        x: 1642.7699581205625
        y: 874.4252863527863
      positionAbsolute:
        x: 1642.7699581205625
        y: 874.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - subleasing_company
          variable: arg1
      height: 53
      id: '17447659678820'
      position:
        x: 1642.7699581205625
        y: 1038.4252863527863
      positionAbsolute:
        x: 1642.7699581205625
        y: 1038.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - building_management_company
          variable: arg1
      height: 53
      id: '17447660019650'
      position:
        x: 1652.917479251143
        y: 1202.4252863527863
      positionAbsolute:
        x: 1652.917479251143
        y: 1202.4252863527863
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(walk_minute_to_station2: int, station2_normed:int) -> dict:\n\
          \    if station2_normed == \"不明\":\n        return{\n            \"result\"\
          :\"\",\n            \"is_ng\":0\n\n        }\n    if walk_minute_to_station2\
          \ >=15:\n        return {\n        \"result\": f'・最寄駅①と徒歩分数①：NG❌\\n　→元情報：{station2_normed}、{walk_minute_to_station2}\\\
          n　→理由　：徒歩分数桁が{walk_minute_to_station2}分であるためNGです。\\n',\n        \"is_ng\"\
          :1\n    }\n    elif walk_minute_to_station2 >= 13:\n        return {\n \
          \       \"result\": f'・最寄駅②と徒歩分数②：要確認☑️\\n　→元情報：{station2_normed}、{walk_minute_to_station2}\\\
          n　→理由　：徒歩分数が{walk_minute_to_station2}分であるため依頼必須です。\\n',\n        \"is_ng\"\
          :2\n    }\n    else:\n        return {\n            \"result\":f'・最寄駅②と徒歩分数②：OK⭕️\\\
          n　→元情報：{station2_normed}、{walk_minute_to_station2}\\n　→理由　：徒歩分数が{walk_minute_to_station2}分であるためOKです。\\\
          n',\n            \"is_ng\":0\n        }\n"
        code_language: python3
        desc: "入力:\n@walk_minute_to_station2 => 最寄り駅②までの徒歩分数\n@station2_normed =>\
          \ 正規化された最寄り駅②\n\n処理: \n最寄り駅②への徒歩分数に関するジャックスNG判定\n\n出力\n@is_ng => NGか否か :\
          \ Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 駅②徒歩分数判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - walk_minute_to_station2
          variable: walk_minute_to_station2
        - value_selector:
          - '1744945587153'
          - station2_normed
          variable: station2_normed
      height: 273
      id: '17447685934460'
      position:
        x: 1686.1940524236368
        y: 440.3258035069231
      positionAbsolute:
        x: 1686.1940524236368
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(building_structure: str) -> dict:\n    if building_structure\
          \ == \"不明\":\n        return {\n            \"result\": f'・建物構造：要確認☑️\\\
          n　→元情報：{building_structure}\\n\\n',\n            \"is_ng\":2\n         \
          \   }\n    elif (building_structure != \"RC (鉄筋コンクリート造)\") and (building_structure\
          \ != \"SRC (鉄骨鉄筋コンクリート造)\"):\n        return {\n            \"result\":\
          \ f'・建物構造：NG❌\\n　→元情報：{building_structure}\\n\\n',\n            \"is_ng\"\
          :1\n            }\n    else:\n        return {\n            \"result\":\
          \ f'・建物構造：OK⭕️\\n　→元情報：{building_structure}\\n\\n',\n            \"is_ng\"\
          :0\n            }\n"
        code_language: python3
        desc: "入力: \n@building_structure=> 建物構造 : String\n\n処理: \n建物構造についてジャックスNG判定\n\
          \n出力:\n@is_ng => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 建物構造判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - building_structure
          variable: building_structure
      height: 225
      id: '1744886370173'
      position:
        x: 2636.933798465694
        y: 140.92497958142914
      positionAbsolute:
        x: 2636.933798465694
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(built_year: int, built_month: int , age_of_building: int)\
          \ -> dict:\n     if built_year <= 1981 and built_month <= 5:\n         \
          \ return {\n               \"result\": f'・築年月：NG❌\\n　→元情報：{built_year}/{built_month}\\\
          n　理由→1981年5月以前に建てられた旧耐震基準物件になります。',\n               \"is_ng\": 1,\n    \
          \      }\n     elif age_of_building >= 30:\n          return {\n       \
          \        \"result\": f'・築年月：要確認☑️\\n　→元情報：{built_year}/{built_month}\\n　理由→築年数30年以上は評価依頼必須です。',\n\
          \               \"is_ng\": 2,\n          }\n\n     else:\n          return\
          \ {\n               \"result\": f'・築年月：OK⭕️\\n　→元情報：{built_year}/{built_month}\\\
          n',\n               \"is_ng\": 0,\n          }\n        \n"
        code_language: python3
        desc: "入力: \n@building_structure=> 建物構造 : String\n\n処理: \n建物構造についてジャックスNG判定\n\
          \n出力:\n@built_year => 築年: Int\n@built_month => 築げつ : Int\n@\n"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 築年月判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - built_year
          variable: built_year
        - value_selector:
          - '17441822209360'
          - built_month
          variable: built_month
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
      height: 241
      id: '1744886948989'
      position:
        x: 2636.933798465694
        y: 440.3258035069231
      positionAbsolute:
        x: 2636.933798465694
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_overall: str, message:str, result_station1: str,\
          \ result_station2: str,result_elevator: str, result_indoorwashingmachine:str,\
          \ result_floor:str, result_buildingstructure:str, result_built_year: str,\
          \ result_footprint:str, result_total_rooms: str, result_autolock: str, result_area:\
          \ str) -> dict:\n    \n\n    answer = f'<span style=\"color: white; background-color:\
          \ #0066FF; padding: 2px 6px; border-radius: 4px;\">物件情報の判定\U0001F3E0</span>：{result_overall}\\\
          n\\n'\n    answer += f\"{message}\\n\\n\"\n    answer += \"<details>\\n\\\
          n\"\n    answer += f\"{result_area}\\n\"\n    answer += f\"{result_station1}\\\
          n\"\n    answer += f\"{result_station2}\\n\"\n    answer += f\"{result_elevator}\\\
          n\"\n    answer += f\"{result_indoorwashingmachine}\\n\"\n    answer +=\
          \ f\"{result_autolock}\\n\"\n    answer += f\"{result_floor}\\n\"\n    answer\
          \ += f\"{result_buildingstructure}\\n\"\n    answer += f\"{result_total_rooms}\\\
          n\"\n    answer += f\"{result_built_year}\\n\"\n    answer += f\"{result_footprint}\\\
          n\"\n    answer += \"</details>\\n\\n\\n\"\n    \n    return {\n       \
          \ \"result\": answer,\n    }\n"
        code_language: python3
        desc: "入力:\n@result_overall => 総合判定結果\n@message => トップメッセージ\n@result_XXX =>\
          \ 各観点の判定結果詳細\n\n処理:\n最終出力用の文章作成\n\n出力: \n@result => ジャックスNG判定に関わる出力用文章 :\
          \ String"
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: ジャックスNG判定
        type: code
        variables:
        - value_selector:
          - '1744887631356'
          - result
          variable: result_overall
        - value_selector:
          - '1744887631356'
          - message
          variable: message
        - value_selector:
          - '1744708430422'
          - result
          variable: result_station1
        - value_selector:
          - '17447685934460'
          - result
          variable: result_station2
        - value_selector:
          - '1744708669708'
          - result
          variable: result_elevator
        - value_selector:
          - '1744709170101'
          - result
          variable: result_indoorwashingmachine
        - value_selector:
          - '1744709515205'
          - result
          variable: result_floor
        - value_selector:
          - '1744886370173'
          - result
          variable: result_buildingstructure
        - value_selector:
          - '1744886948989'
          - result
          variable: result_built_year
        - value_selector:
          - '1744945728352'
          - result
          variable: result_footprint
        - value_selector:
          - '1744951671985'
          - result
          variable: result_total_rooms
        - value_selector:
          - '1744956146599'
          - result
          variable: result_autolock
        - value_selector:
          - '1745206735995'
          - result
          variable: result_area
      height: 257
      id: '1744887463772'
      position:
        x: 4076.341541069358
        y: 140.92497958142914
      positionAbsolute:
        x: 4076.341541069358
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6:\
          \ int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int)\
          \ -> dict:\n    result = \"OK⭕️\"\n    message = \"\"\n    if arg11 == 1:\n\
          \        result = \"NG❌\"\n        message += \"・エリアがNGです。\\n\"\n    if\
          \ arg1 == 1 and arg2 == 1:\n        result = \"NG❌\"\n        message +=\
          \ \"・徒歩分数がNGです。\\n\"\n    if arg3 == 1:\n        result = \"NG❌\"\n    \
          \    message += \"・地上階層3F以上でエレベータ無はNGです。\\n\"\n    if arg6 == 1:\n     \
          \   result = \"NG❌\"\n        message += \"・建物構造がSRC/RC以外の物件はNGです。\\n\"\n\
          \    if arg7 == 1:\n        result = \"NG❌\"\n        message += \"・築年月が1981/05以前の物件はNGです。\\\
          n\"\n\n    if arg11 ==2:\n        message += \"　※駅情報が不足しています。\\n\"\n   \
          \ if arg12 == 2:\n        message += \"　※サブリース物件は依頼必須です。\\n\"\n    if arg5\
          \ == 2:\n        message += \"　※所在階1Fは依頼必須です。\\n\"\n    if arg7 == 2:\n\
          \        message += \"　※築年数30年以上は依頼必須です。\\n\"\n    if arg8 == 2:\n     \
          \   message += \"　※平米数が依頼必須です。\\n\"\n    if arg9 == 2:\n        message\
          \ += \"　※総戸数20戸未満は依頼必須です。\\n\"\n    if arg4 == 2:\n        message += \"\
          　※室内洗濯機置場無しの場合は要個別相談です。\\n\"\n    if arg10 == 2:\n        message += \"\
          　※オートロックなしの場合は要個別相談です。\\n\"\n\n    return{\n        \"result\":result,\n\
          \        \"message\":message\n    }\n\n\n\n"
        code_language: python3
        desc: "入力:\n@arg1~12 => 各観点でのNG判定フラグ : Int\n\n処理: \n総合的なNG判定と、NGまたは要相談項目についてメッセージ作成\n\
          \n出力:\n@message => NGまたは要相談項目についてのメッセージ : String\n@result => 総合的なNG判定 :\
          \ String"
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: string
        selected: false
        title: 文章生成_物件情報総合判定
        type: code
        variables:
        - value_selector:
          - '1744708430422'
          - is_ng
          variable: arg1
        - value_selector:
          - '17447685934460'
          - is_ng
          variable: arg2
        - value_selector:
          - '1744708669708'
          - is_ng
          variable: arg3
        - value_selector:
          - '1744709170101'
          - is_ng
          variable: arg4
        - value_selector:
          - '1744709515205'
          - is_ng
          variable: arg5
        - value_selector:
          - '1744886370173'
          - is_ng
          variable: arg6
        - value_selector:
          - '1744886948989'
          - is_ng
          variable: arg7
        - value_selector:
          - '1744945728352'
          - is_ng
          variable: arg8
        - value_selector:
          - '1744951671985'
          - is_ng
          variable: arg9
        - value_selector:
          - '1744956146599'
          - is_ng
          variable: arg10
        - value_selector:
          - '1745206735995'
          - is_ng
          variable: arg11
        - value_selector:
          - '1745219886048'
          - is_ng
          variable: arg12
      height: 257
      id: '1744887631356'
      position:
        x: 3728.6966604023696
        y: 140.92497958142914
      positionAbsolute:
        x: 3728.6966604023696
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\n\ndef main(station1: str, station2: str) -> dict:\n\n    station1\
          \ = station1\n    station2 = station2\n\n    if \"(\" in station1:\n   \
          \     station1 = station1.split(\"(\")[0]\n    if \"（\" in station1:\n \
          \       station1 = station1.split(\"（\")[0]\n    if \"駅\" in station1:\n\
          \        station1 = station1.split(\"駅\")[0]   \n\n    if \"(\" in station2:\n\
          \        station2 = station2.split(\"(\")[0]\n    if \"（\" in station2:\n\
          \        station2 = station2.split(\"（\")[0]\n    if \"駅\" in station2:\n\
          \        station2 = station2.split(\"駅\")[0]   \n    \n    return {\n  \
          \      \"station1_normed\": station1,\n        \"station2_normed\": station2\n\
          \    }\n\n"
        code_language: python3
        desc: '入力：

          @station1 => 最寄り駅① : string

          @station2 => 最寄り駅② : string


          処理：

          駅名での検索用に駅名を正規化している。具体的には以下の条件を満たすように整形している。

          ①"駅"を含まない。②（）を含まない。


          出力:

          @station1_normed => 正規化された最寄り駅名① : string

          @station2_normed => 正規化された最寄り駅名② : string'
        outputs:
          station1_normed:
            children: null
            type: string
          station2_normed:
            children: null
            type: string
        selected: false
        title: 駅名正規化
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - station1
          variable: station1
        - value_selector:
          - '17441822209360'
          - station2
          variable: station2
      height: 305
      id: '1744945587153'
      position:
        x: -1735.5504118307117
        y: 111.85621477647405
      positionAbsolute:
        x: -1735.5504118307117
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(footprint: float, area: str) -> dict:\n    if footprint\
          \ < 18.0:\n          return {\n               \"result\": f'・専有面積：要確認☑️\\\
          n　→元情報：{footprint}\\n　→理由　：エリアD（関東エリア）であれば一律NG。それ以外であれば評価依頼必須です。',\n   \
          \            \"is_ng\": 2,\n          }\n    elif footprint >= 35.0 and\
          \ area == \"関東\":\n        return {\n               \"result\": f'・専有面積：要確認☑️\\\
          n　→元情報：{footprint}\\n　→理由　：関東エリアで35平米以上は評価依頼必須です。',\n               \"is_ng\"\
          : 2,\n          }\n    elif footprint >= 40.0 and area == \"関東以外\":\n  \
          \      return {\n               \"result\": f'・専有面積：要確認☑️\\n　→元情報：{footprint}\\\
          n　→理由　：関東エリア以外で40平米以上は評価依頼必須です。',\n               \"is_ng\": 2,\n      \
          \    }\n    else:\n        return {\n               \"result\": f'・専有面積：OK⭕️\\\
          n　→元情報：{footprint}\\n',\n               \"is_ng\": 0,\n          }\n\n"
        code_language: python3
        desc: "入力: \n@footprint => 専有面積 : Float\n@area => エリア:String\n\n処理: \n専有面積についてジャックスNG判定\n\
          \n出力:\n@is_ng => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 専有面積判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - footprint
          variable: footprint
        - value_selector:
          - '17441822209360'
          - area
          variable: area
      height: 225
      id: '1744945728352'
      position:
        x: 3000.5061013593154
        y: 140.92497958142914
      positionAbsolute:
        x: 3000.5061013593154
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(total_rooms: int) -> dict:\n     if total_rooms == 0:\n\
          \          return {\n               \"result\": f'・総戸数：要確認☑️\\n　→元情報：不明\\\
          n　理由→20戸未満は評価依頼必須です。',\n               \"is_ng\": 2,\n          }\n    \
          \ elif total_rooms < 20:\n          return {\n               \"result\"\
          : f'・総戸数：要確認☑️\\n　→元情報：{total_rooms}\\n　理由→20戸未満は評価依頼必須です。',\n         \
          \      \"is_ng\": 2,\n          }\n     else:\n          return {\n    \
          \           \"result\": f'・総戸数：OK⭕️\\n　→元情報：{total_rooms}\\n',\n       \
          \        \"is_ng\": 0,\n          }\n"
        code_language: python3
        desc: "入力: \n@totalrooms=> 総戸数 : Int\n\n処理: \n総戸数についてジャックスNG判定\n\n出力:\n@is_ng\
          \ => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 総戸数判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - total_rooms
          variable: total_rooms
      height: 209
      id: '1744951671985'
      position:
        x: 3000.5061013593154
        y: 440.3258035069231
      positionAbsolute:
        x: 3000.5061013593154
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(built_year: int, built_month: int) -> dict:\n    import\
          \ datetime\n    \n    dt_now = datetime.datetime.now()\n\n    if dt_now.month\
          \ >= built_month:\n        return {\n            \"age_of_building\": dt_now.year\
          \ - built_year,\n            }\n    else:\n        return {\n          \
          \  \"age_of_building\": dt_now.year - built_year - 1,\n            }\n\n"
        code_language: python3
        desc: '入力：

          @built_year => 築年 : int

          @built_month => 築月 : int


          処理：

          築年月から現在までの築年数を算出する


          出力:

          @age_of_building => 築年数 : int'
        outputs:
          age_of_building:
            children: null
            type: number
        selected: false
        title: 築年数計算
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - built_year
          variable: built_year
        - value_selector:
          - '17441822209360'
          - built_month
          variable: built_month
      height: 225
      id: '1744954912822'
      position:
        x: -2103.740033442781
        y: 111.85621477647405
      positionAbsolute:
        x: -2103.740033442781
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(auto_lock: str) -> dict:\n    if auto_lock == \"なし\":\n\
          \        return {\n            \"result\": f'・オートロック：要確認☑️\\n　→元情報：{auto_lock}\\\
          n　→理由　：オートロック無しは原則NGです。入居者が見込める場合のみ可能ですが、要個別相談です。',\n            \"is_ng\"\
          : 2\n    }\n    elif auto_lock == \"未指定\" or auto_lock == \"不明\":\n    \
          \    return{\n            \"result\" : \n            f'・オートロック：要確認☑️\\n　→元情報：{auto_lock}\\\
          n　→理由　：オートロック無しは原則NGになるため要確認です。',\n            \"is_ng\": 2\n        }\n\
          \    else:\n        return{\n            \"result\" : \n            f'・オートロック：OK⭕️\\\
          n　→元情報：{auto_lock}\\n',\n            \"is_ng\": 0\n        }\n"
        code_language: python3
        desc: "入力: \n@auto_lock=> オートロック有無 : String\n\n処理: \nオートロック有無についてジャックスNG判定\n\
          \n出力:\n@is_ng => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: オートロック判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - auto_lock
          variable: auto_lock
      height: 241
      id: '1744956146599'
      position:
        x: 3351.2473548110106
        y: 140.92497958142914
      positionAbsolute:
        x: 3351.2473548110106
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(ap_rank_base_kanto1, ap_rank_base_kanto2, ap_rank_base_notkanto1,\
          \ ap_rank_base_notkanto2, ap_rank_special_kanto1, ap_rank_special_kanto2,\
          \ ap_rank_special_notkanto1, ap_rank_special_notkanto2, area: str) -> dict:\n\
          \    \n    if area == \"関東\":\n        ap_rank_base1, ap_rank_base2, ap_rank_special1,\
          \ ap_rank_special2 = ap_rank_base_kanto1, ap_rank_base_kanto2, ap_rank_special_kanto1,\
          \ ap_rank_special_kanto2\n    else:\n        ap_rank_base1, ap_rank_base2,\
          \ ap_rank_special1, ap_rank_special2 = ap_rank_base_notkanto1, ap_rank_base_notkanto2,\
          \ ap_rank_special_notkanto1, ap_rank_special_notkanto2\n\n    if ap_rank_base1\
          \ == 9999 and ap_rank_base2 == 9999:\n        return {\n            \"better_station_num\"\
          : 0,\n            \"ap_rank_base\": 9999,\n            \"ap_rank_special\"\
          : 0,\n            \"message\": '基準ランク：なし, カテ1特例：なし\\n'\n            }\n\
          \    \n\n    if float(ap_rank_base1) <= float(ap_rank_base2):\n        return\
          \ {\n            \"better_station_num\": 1,\n            \"ap_rank_base\"\
          : float(ap_rank_base1),\n            \"ap_rank_special\": 1 if ap_rank_special1\
          \ else 0,\n            \"message\": f\"対象駅：{station1}, 基準ランク：{ap_rank_base1},\
          \ カテ1特例：{ap_rank_special1}\\n\"\n            }\n    else:\n        return\
          \ {\n            \"better_station_num\": 2,\n            \"ap_rank_base\"\
          : float(ap_rank_base2),\n            \"ap_rank_special\": 1 if ap_rank_special2\
          \ else 0,\n            \"message\": f\"対象駅：{station2}, 基準ランク：{ap_rank_base2},\
          \ カテ1特例：{ap_rank_special2}\\n\"\n            }"
        code_language: python3
        desc: ''
        outputs:
          ap_rank_base:
            children: null
            type: number
          ap_rank_special:
            children: null
            type: number
          better_station_num:
            children: null
            type: number
          message:
            children: null
            type: string
        selected: false
        title: APランク抽出
        type: code
        variables:
        - value_selector:
          - '1744360238139'
          - ap_rank_base
          variable: ap_rank_base_kanto1
        - value_selector:
          - '17536788863340'
          - ap_rank_base
          variable: ap_rank_base_kanto2
        - value_selector:
          - '17536792033640'
          - ap_rank_base
          variable: ap_rank_base_notkanto1
        - value_selector:
          - '17536792033642'
          - ap_rank_base
          variable: ap_rank_base_notkanto2
        - value_selector:
          - '17441822209360'
          - area
          variable: area
        - value_selector:
          - '1744360238139'
          - ap_rank_special
          variable: ap_rank_special_kanto1
        - value_selector:
          - '17536788863340'
          - ap_rank_special
          variable: ap_rank_special_kanto2
        - value_selector:
          - '17536792033640'
          - ap_rank_special
          variable: ap_rank_special_notkanto1
        - value_selector:
          - '17536792033642'
          - ap_rank_special
          variable: ap_rank_special_notkanto2
      height: 53
      id: '17449786735610'
      position:
        x: 5847.032849619778
        y: 162.1810733248418
      positionAbsolute:
        x: 5847.032849619778
        y: 162.1810733248418
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(footprint: float, current_status: str) -> dict:\n    if\
          \ current_status != \"サブリース中\" and footprint >= 35.0:\n        return {\n\
          \            \"message\": f\"サブリース物件でないかつ専有面積：{footprint}>=35.0より-1\",\n\
          \            \"result\": -1,\n        }\n    else:\n        return {\n \
          \           \"message\": \"\",\n            \"result\": 0,\n        }\n"
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_専有面積
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - footprint
          variable: footprint
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 53
      id: '1744979004484'
      position:
        x: 6558.274098417542
        y: 241.8902733645291
      positionAbsolute:
        x: 6558.274098417542
        y: 241.8902733645291
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(better_station_num: int, walk_minute_to_station1: int, walk_minute_to_station2:\
          \ int) -> dict:\n    if better_station_num == 1:\n        walk_minute_to_better_station\
          \ = walk_minute_to_station1\n    elif better_station_num == 2:\n       \
          \ walk_minute_to_better_station = walk_minute_to_station2\n    elif better_station_num\
          \ == 0:\n        return {\n            \"message\": \"\",\n            \"\
          result\": 0,\n        }\n    \n    if walk_minute_to_better_station <=3:\n\
          \        return {\n            \"message\": f\"徒歩分数が3分以内より-1\\n\",\n   \
          \         \"result\": -1,\n        }\n    elif walk_minute_to_better_station\
          \ <=5:\n        return {\n            \"message\": f\"徒歩分数が5分以内より-0.5\\\
          n\",\n            \"result\": -0.5,\n        }\n    elif walk_minute_to_better_station\
          \ >=10:\n        return {\n            \"message\": f\"徒歩分数が10分以上より+1\\\
          n\",\n            \"result\": 1,\n        }\n    else:\n        return {\n\
          \            \"message\": f\"\",\n            \"result\": 0,\n        }\n\
          \    \n\n"
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_駅徒歩
        type: code
        variables:
        - value_selector:
          - '17449786735610'
          - better_station_num
          variable: better_station_num
        - value_selector:
          - '17441822209360'
          - walk_minute_to_station1
          variable: walk_minute_to_station1
        - value_selector:
          - '17441822209360'
          - walk_minute_to_station2
          variable: walk_minute_to_station2
      height: 53
      id: '1744979283119'
      position:
        x: 6558.274098417542
        y: 305.68860034809944
      positionAbsolute:
        x: 6558.274098417542
        y: 305.68860034809944
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: int, arg2: str, arg3: str, arg4: str, arg5: str, arg6:\
          \ str, arg7: str,  arg8: str, arg9: str,ap_rank_base:int, ap_rank_special:\
          \ int, sum: float, current_status: str) -> dict:\n\n    answer = f'''\n\
          \            <div style=\"display: flex; justify-content: space-between;\
          \ align-items: center;\">\n            <div>\n                <span style=\"\
          color: white; background-color: #0066FF; padding: 2px 6px; border-radius:\
          \ 4px;\">物件カテゴリ\U0001F680</span>：{arg1 if ap_rank_base < 9999 else \"不明\"\
          }\n            </div>\n            <div>\n                <a href=\"https://forms.gle/CVxUvgS3PUWxCsfD9\"\
          >お問い合わせ・修正依頼はこちら</a>\n            </div>\n        </div>\n    '''\n    \n\
          \    if ap_rank_base < 9999:\n        answer += f'\\n<details>\\n'\n   \
          \     answer += f'物件カテゴリ：{arg1}\\n\\n'\n        answer += arg2\n       \
          \ answer += arg3\n        answer += arg4\n        answer += arg5\n     \
          \   answer += arg6\n        answer += arg7\n        answer += arg8\n   \
          \     answer += arg9\n\n\n        if current_status == \"サブリース中\" and int(sum)\
          \ <= 1:\n            answer += f\"最終評点：{sum}→{int(sum)}（切り捨て）→2（サブリース上限適用）\\\
          n\"\n\n        elif int(sum) <= 1 and ap_rank_special == 1.0:\n        \
          \    answer += f\"最終評点：{sum}→{int(sum)}（切り捨て）→{arg1}（カテ1特例）\\n\"\n     \
          \   else:\n            answer += f\"最終評点：{sum}→{int(sum)}（切り捨て）\\n\"\n \
          \       \n        answer += f'\\n</details>\\n'\n    else:\n        answer\
          \ += f'\\n 基準ランクが不明な駅です。'\n    \n    return {\n        \"result\":answer\n\
          \    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 文章生成__物件カテゴリランク結果_ジャックス
        type: code
        variables:
        - value_selector:
          - '1744979926622'
          - result
          variable: arg1
        - value_selector:
          - '1744979004484'
          - message
          variable: arg3
        - value_selector:
          - '1744979283119'
          - message
          variable: arg4
        - value_selector:
          - '17449786735610'
          - message
          variable: arg2
        - value_selector:
          - '17449786735610'
          - ap_rank_base
          variable: ap_rank_base
        - value_selector:
          - '17449888333070'
          - message
          variable: arg5
        - value_selector:
          - '17449885245800'
          - message
          variable: arg6
        - value_selector:
          - '17449889818030'
          - message
          variable: arg7
        - value_selector:
          - '17449892308840'
          - message
          variable: arg8
        - value_selector:
          - '17449894475790'
          - message
          variable: arg9
        - value_selector:
          - '17449786735610'
          - ap_rank_special
          variable: ap_rank_special
        - value_selector:
          - '1744979926622'
          - sum
          variable: sum
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 53
      id: '1744979899122'
      position:
        x: 7559.570218486924
        y: 162.1810733248418
      positionAbsolute:
        x: 7559.570218486924
        y: 162.1810733248418
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str, arg2: str, result_footprint: float, result_walkminute:\
          \ float, result_builtyear: float, result_repairfund:float, result_currentstatus:\
          \ float, result_stigmatized:float, result_floor:float, rank: str, current_status:\
          \ str) -> dict:\n    \n    answer = arg1 + float(result_footprint) + float(result_walkminute)\
          \ + float(result_builtyear) + float(result_repairfund) + float(result_currentstatus)\
          \ + float(result_stigmatized) + float(result_floor)\n\n\n    if answer <=1.5\
          \ and current_status == \"サブリース中\":\n        return {\n            \"sum\"\
          :answer,\n            \"result\":2\n        }\n    elif answer <=1.5:\n\
          \        if (rank == \"S\" and arg2 == 1):\n            return {\n     \
          \           \"sum\":answer,\n                \"result\":0\n            }\n\
          \        else:\n            return {\n                \"sum\":answer,\n\
          \                \"result\":1\n            }\n    else:\n        return\
          \ {\n            \"sum\":answer,\n            \"result\":int(answer)\n \
          \       }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: number
          sum:
            children: null
            type: number
        selected: false
        title: 物件カテゴリ算出
        type: code
        variables:
        - value_selector:
          - '17449786735610'
          - ap_rank_base
          variable: arg1
        - value_selector:
          - '17449786735610'
          - ap_rank_special
          variable: arg2
        - value_selector:
          - '1744979004484'
          - result
          variable: result_footprint
        - value_selector:
          - '1744979283119'
          - result
          variable: result_walkminute
        - value_selector:
          - '1744360071507'
          - rank
          variable: rank
        - value_selector:
          - '17449888333070'
          - result
          variable: result_builtyear
        - value_selector:
          - '17449885245800'
          - result
          variable: result_repairfund
        - value_selector:
          - '17449889818030'
          - result
          variable: result_currentstatus
        - value_selector:
          - '17449892308840'
          - result
          variable: result_stigmatized
        - value_selector:
          - '17449894475790'
          - result
          variable: result_floor
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 53
      id: '1744979926622'
      position:
        x: 7146.556153938936
        y: 241.8902733645291
      positionAbsolute:
        x: 7146.556153938936
        y: 241.8902733645291
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(area: str, rate_kanto_station1, rate_kanto_station2, rate_notkanto_station1,\
          \ rate_notkanto_station2, rank_kanto_station1, rank_kanto_station2, rank_notkanto_station1,\
          \ rank_notkanto_station2) -> dict:\n    \n    if area == \"関東\":\n     \
          \   rank1, rate1, rank2, rate2 = rank_kanto_station1, rate_kanto_station1,\
          \ rank_kanto_station2, rate_kanto_station2\n    else:\n        rank1, rate1,\
          \ rank2, rate2 = rank_notkanto_station1, rate_notkanto_station1, rank_notkanto_station2,\
          \ rate_notkanto_station2\n    \n    if rank1 != \"NG\" and rank2 != \"NG\"\
          :\n        if float(rate1) <= float(rate2):\n            better_station_num\
          \ = 1\n            rank = rank1\n            rate = rate1\n        else:\n\
          \            better_station_num = 2\n            rank = rank2\n        \
          \    rate = rate2\n    elif rank1 != \"NG\" and rank2 == \"NG\":\n     \
          \   better_station_num = 1\n        rank = rank1\n        rate = rate1\n\
          \    elif rank1 == \"NG\" and rank2 != \"NG\":\n        better_station_num\
          \ = 2\n        rank = rank2\n        rate = rate2\n    else:\n        better_station_num\
          \ = 0\n        rank = \"\"\n        rate = 9999\n\n    return{\n       \
          \ \"better_station_num\": better_station_num,\n        \"rank\": rank,\n\
          \        \"rate\": rate\n    }\n"
        code_language: python3
        desc: '入力:

          @area => エリア : String

          @rate_kanto_station1 => 最寄り駅①の利回り（関東） : Float

          @rate_kanto_station2 => 最寄り駅②の利回り（関東） : Float

          @rate_notkanto_station1 => 最寄り駅①の利回り（関東以外） : Float

          @rate_notkanto_station2 => 最寄り駅②の利回り（以外） : Float

          @rank_kanto_station1 => 最寄り駅①のジャックスランク（関東） : String

          @rank_kanto_station2 => 最寄り駅②のジャックスランク（関東） : String

          @rank_notkanto_station1 => 最寄り駅①のジャックスランク（関東以外） : String

          @rank_notkanto_station2 => 最寄り駅②のジャックスランク（関東以外） : String


          処理:

          最寄り駅①と②の利回りを比較し、良い利回りの駅を決定する


          出力:

          @better_station_num => 採用する駅番号 : Int

          例. 最寄り駅①を採用する場合

          →better_station_num = 1

          @rate => 採用された利回り : Float

          @rank => 採用されたジャックスランク : String'
        outputs:
          better_station_num:
            children: null
            type: number
          rank:
            children: null
            type: string
          rate:
            children: null
            type: number
        selected: false
        title: 利回り算出適用駅の決定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - area
          variable: area
        - value_selector:
          - '1744361311304'
          - rate
          variable: rate_kanto_station1
        - value_selector:
          - '17536788863340'
          - rank
          variable: rank_kanto_station1
        - value_selector:
          - '17536790221620'
          - rate
          variable: rate_kanto_station2
        - value_selector:
          - '17536788863340'
          - rank
          variable: rank_kanto_station2
        - value_selector:
          - '17536797903060'
          - rate
          variable: rate_notkanto_station1
        - value_selector:
          - '17536792033640'
          - rank
          variable: rank_notkanto_station1
        - value_selector:
          - '17536798046200'
          - rate
          variable: rate_notkanto_station2
        - value_selector:
          - '17536788863340'
          - rank
          variable: rank_notkanto_station2
      height: 593
      id: '1744985088407'
      position:
        x: 1331.2699989603132
        y: 146.44809566618642
      positionAbsolute:
        x: 1331.2699989603132
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(repair_reserve_fund: int, total_rooms: int) -> dict:\n \
          \   if total_rooms < 30 and total_rooms != 0 and repair_reserve_fund < 3000\
          \ and repair_reserve_fund != 0:\n        return {\n            \"message\"\
          : \"総戸数30戸未満かつ、修繕積立金が3000円未満のため+1\\n\",\n            \"result\": 1,\n  \
          \      }  \n    else:\n        return {\n            \"message\": \"\",\n\
          \            \"result\": 0,\n        }  \n        "
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_修繕
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - repair_reserve_fund
          variable: repair_reserve_fund
        - value_selector:
          - '17441822209360'
          - total_rooms
          variable: total_rooms
      height: 53
      id: '17449885245800'
      position:
        x: 6558.274098417542
        y: 434.1248558699273
      positionAbsolute:
        x: 6558.274098417542
        y: 434.1248558699273
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(prefecture: str, age_of_building: int) -> dict:\n    if\
          \ prefecture == \"東京都\":\n        if age_of_building >= 30:\n          \
          \  return {\n                \"message\": f\"東京都で築20年以上なので+2\\n\",\n   \
          \             \"result\": 2,\n            }\n        elif age_of_building\
          \ >= 25:\n            return {\n                \"message\": f\"東京都で築25年以上なので+1\\\
          n\",\n                \"result\": 1,\n            }\n        elif age_of_building\
          \ >= 20:\n            return {\n                \"message\": f\"東京都で築20年以上なので+0.5\\\
          n\",\n                \"result\": 0.5,\n            }\n        else:\n \
          \           return {\n                \"message\": f\"\",\n            \
          \    \"result\": 0,\n            }\n    else:\n        if age_of_building\
          \ >= 30:\n            return {\n                \"message\": f\"東京都以外で築30年以上なので+2\\\
          n\",\n                \"result\": 2,\n            }\n        elif age_of_building\
          \ >= 25:\n            return {\n                \"message\": f\"東京都以外で築25年以上なので+1.5\\\
          n\",\n                \"result\": 1.5,\n            }\n        elif age_of_building\
          \ >= 20:\n            return {\n                \"message\": f\"東京都以外で築20年以上なので+1\\\
          n\",\n                \"result\": 1,\n            }\n        else:\n   \
          \         return {\n                \"message\": f\"\",\n              \
          \  \"result\": 0,\n            }\n"
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_築年数
        type: code
        variables:
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '17441822209360'
          - prefecture
          variable: prefecture
      height: 53
      id: '17449888333070'
      position:
        x: 6553.271472894005
        y: 374.9260453474087
      positionAbsolute:
        x: 6553.271472894005
        y: 374.9260453474087
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(current_status: str) -> dict:\n    if current_status ==\
          \ \"サブリース中\":\n        return {\n            \"message\": \"サブリース物件のため+1.5\\\
          n\",\n            \"result\": 1.5,\n        }    \n    else:\n        return\
          \ {\n            \"message\": \"\",\n            \"result\": 0,\n      \
          \  }\n        "
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_現況
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 53
      id: '17449889818030'
      position:
        x: 6820.542377164262
        y: 241.8902733645291
      positionAbsolute:
        x: 6820.542377164262
        y: 241.8902733645291
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(is_stigmatized: str) -> dict:\n    if is_stigmatized ==\
          \ \"ネット記載\" or is_stigmatized == \"重調記載\":\n        return {\n         \
          \   \"message\": \"心理的瑕疵ありのため+1\\n\",\n            \"result\": 1,\n    \
          \    }    \n    else:\n        return {\n            \"message\": \"\",\n\
          \            \"result\": 0,\n        }\n        "
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_心理的瑕疵
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - is_stigmatized
          variable: is_stigmatized
      height: 53
      id: '17449892308840'
      position:
        x: 6820.542377164262
        y: 305.68860034809944
      positionAbsolute:
        x: 6820.542377164262
        y: 305.68860034809944
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(floor: int) -> dict:\n    if floor ==1:\n        return\
          \ {\n            \"message\": \"所在階が1Fのため+0.5\\n\",\n            \"result\"\
          : 0.5,\n        }    \n    else:\n        return {\n            \"message\"\
          : \"\",\n            \"result\": 0,\n        }\n        "
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
          result:
            children: null
            type: number
        selected: false
        title: 加減算_階数
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - floor
          variable: floor
      height: 53
      id: '17449894475790'
      position:
        x: 6820.542377164262
        y: 374.9260453474087
      positionAbsolute:
        x: 6820.542377164262
        y: 374.9260453474087
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(better_station_num: int, station1_normed: str, station2_normed:str,\
          \ area: str) -> dict:\n    if station1_normed == \"不明\" and station2_normed\
          \ == \"不明\":\n        return {\n            \"result\": f'・エリア判定：要確認☑️\\\
          n　→元情報：{station1_normed}駅, {station2_normed}駅\\n　→理由　：駅情報が不明です。\\n',\n \
          \           \"is_ng\":2\n        }\n    elif better_station_num == 0:\n\
          \        return {\n        \"result\": f'・エリア判定：NG❌\\n　→元情報：{station1_normed}駅,\
          \ {station2_normed}駅\\n　→理由　：ジャックス駅ランク外です。\\n',\n        \"is_ng\":1\n \
          \       }\n    elif better_station_num == 1:\n        return {\n       \
          \ \"result\": f'・エリア判定：OK⭕️\\n　→元情報：{station1_normed}駅\\n\\n',\n       \
          \ \"is_ng\":0\n        }\n    else:\n        return {\n        \"result\"\
          : f'・エリア判定：OK⭕️\\n　→元情報：{station2_normed}駅\\n\\n',\n        \"is_ng\":0\n\
          \        }\n        \n\n"
        code_language: python3
        desc: "入力: \n@better_station_num => 採用された駅番号 : Int\n@station1_normed => 正規化された最寄り駅①\
          \ : String\n\n処理: \n最寄駅についてジャックスNG判定\n\n出力: \n@is_ng => NGか否か : Boolean\n\
          @result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 駅判定
        type: code
        variables:
        - value_selector:
          - '1744985088407'
          - better_station_num
          variable: better_station_num
        - value_selector:
          - '1744945587153'
          - station1_normed
          variable: station1_normed
        - value_selector:
          - '1744945587153'
          - station2_normed
          variable: station2_normed
        - value_selector:
          - '17441822209360'
          - area
          variable: area
      height: 257
      id: '1745206735995'
      position:
        x: 1967.9219466669654
        y: 140.92497958142914
      positionAbsolute:
        x: 1967.9219466669654
        y: 140.92497958142914
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(current_status: str) -> dict:\n    if current_status ==\
          \ \"サブリース中\":\n        return {\n            \"result\": \"・現況：要確認☑️\\n　→元情報：サブリース中\\\
          n　→理由　：サブリース物件は評価依頼必須です。\",\n            \"is_ng\": 2\n        }\n    else:\n\
          \        return {\n            \"result\": \"\",\n            \"is_ng\"\
          : 0\n        }\n"
        code_language: python3
        desc: "入力: \n@current_status=> 現況 : String\n\n処理: \n総戸数についてジャックスNG判定\n\n出力:\n\
          @is_ng => NGか否か : Boolean\n@result => 判定結果の文章 : String"
        outputs:
          is_ng:
            children: null
            type: number
          result:
            children: null
            type: string
        selected: false
        title: 現況判定
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - current_status
          variable: current_status
      height: 209
      id: '1745219886048'
      position:
        x: 3351.2473548110106
        y: 440.3258035069231
      positionAbsolute:
        x: 3351.2473548110106
        y: 440.3258035069231
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 8437e7e6-9d63-4eb2-9929-139b335b9239
            value: 関東
            varType: string
            variable_selector:
            - '17441822209360'
            - area
          id: 'true'
          logical_operator: and
        desc: ''
        selected: false
        title: 関東/関東以外分離
        type: if-else
      height: 125
      id: '1750240500121'
      position:
        x: -1162.0470762276038
        y: 111.85621477647405
      positionAbsolute:
        x: -1162.0470762276038
        y: 111.85621477647405
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - B/91W8cZDylSu4jhzCykazWBwk54Mf9nUK56vh4GFBo1i7xKN36slVhQAmAX4bdp
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: null
          top_k: 2
        query_variable_selector:
        - '17527267479120'
        - result
        retrieval_mode: multiple
        selected: false
        title: 駅ランク取得_関東以外
        type: knowledge-retrieval
      height: 91
      id: '17502405777910'
      position:
        x: -238.43844533806362
        y: 1175.1010641090118
      positionAbsolute:
        x: -238.43844533806362
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - ZFHLC8b6hO2tb4jRq41hmQhCSB/sRBG+7exIYjZ8IuqNseN6M0GbU5hwOEef2TyY
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: null
          top_k: 2
        query_variable_selector:
        - '17536792033641'
        - query_for_getting_yied
        retrieval_mode: multiple
        selected: false
        title: 利回り取得_関東以外
        type: knowledge-retrieval
      height: 91
      id: '17502405906880'
      position:
        x: 726.6442750844396
        y: 1175.1010641090118
      positionAbsolute:
        x: 726.6442750844396
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - B/91W8cZDylSu4jhzCykazWBwk54Mf9nUK56vh4GFBo1i7xKN36slVhQAmAX4bdp
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: null
          top_k: 2
        query_variable_selector:
        - '17527267474810'
        - result
        retrieval_mode: multiple
        selected: false
        title: 駅ランク取得_関東以外 ②
        type: knowledge-retrieval
      height: 91
      id: '17502405924900'
      position:
        x: -238.43844533806362
        y: 1557.532513537758
      positionAbsolute:
        x: -238.43844533806362
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - ZFHLC8b6hO2tb4jRq41hmQhCSB/sRBG+7exIYjZ8IuqNseN6M0GbU5hwOEef2TyY
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: cohere.rerank-v3-5:0
            provider: langgenius/bedrock/bedrock
          score_threshold: null
          top_k: 2
        query_variable_selector:
        - '17536792033643'
        - query_for_getting_yied
        retrieval_mode: multiple
        selected: false
        title: 利回り取得_関東以外②
        type: knowledge-retrieval
      height: 91
      id: '17503029643790'
      position:
        x: 726.6442750844396
        y: 1557.532513537758
      positionAbsolute:
        x: 726.6442750844396
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1744380192035'
          - result
          variable: result
        selected: false
        title: 終了
        type: end
      height: 89
      id: '1750422547769'
      position:
        x: 10427.884425826704
        y: 164.24487884452913
      positionAbsolute:
        x: 10427.884425826704
        y: 164.24487884452913
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '1744945587153'
          - station1_normed
          variable: arg1
      height: 53
      id: '17527266387020'
      position:
        x: -579.3210198022164
        y: 146.44809566618642
      positionAbsolute:
        x: -579.3210198022164
        y: 146.44809566618642
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - station2
          variable: arg1
      height: 53
      id: '17527267178200'
      position:
        x: -579.3210198022164
        y: 575.5125912189224
      positionAbsolute:
        x: -579.3210198022164
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '17441822209360'
          - station2
          variable: arg1
      height: 53
      id: '17527267474810'
      position:
        x: -579.3210198022164
        y: 1557.532513537758
      positionAbsolute:
        x: -579.3210198022164
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(arg1: str) -> dict:\n    if arg1!=\"\":\n        return\
          \ {\n        \"result\": arg1\n    }\n    else:\n        return {\n    \
          \    \"result\": \"不明\"\n    }\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 空クエリ対策
        type: code
        variables:
        - value_selector:
          - '1744945587153'
          - station1_normed
          variable: arg1
      height: 53
      id: '17527267479120'
      position:
        x: -579.3210198022164
        y: 1175.1010641090118
      positionAbsolute:
        x: -579.3210198022164
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result: dict):\n    try:\n        row = str(result[0][\"\
          content\"])\n        rank = row.split(';')[2].split(': ')[1]\n        ap_rank_base\
          \ = float(row.split(';')[3].split(': ')[1])\n        ap_rank_special = (row.split(';')[4].split(':\
          \ ')[1] == \"1.0\")\n        return {\n            \"status\":\"OK\",\n\
          \            \"rank\": rank, \n            \"ap_rank_base\": ap_rank_base,\n\
          \            \"ap_rank_special\": ap_rank_special\n            }\n    except\
          \ Exception as e:\n        return {\n            \"status\":\"FAIL\",\n\
          \            \"rank\": \"NG\",\n            \"ap_rank_base\": 9999,\n  \
          \          \"ap_rank_special\": False\n            }"
        code_language: python3
        desc: 省略
        outputs:
          ap_rank_base:
            children: null
            type: number
          ap_rank_special:
            children: null
            type: number
          rank:
            children: null
            type: string
          status:
            children: null
            type: string
        selected: false
        title: クエリ結果から値抽出_関東_最寄り駅②
        type: code
        variables:
        - value_selector:
          - '17443835493500'
          - result
          variable: result
      height: 81
      id: '17536788863340'
      position:
        x: 96.2144223847838
        y: 575.5125912189224
      positionAbsolute:
        x: 96.2144223847838
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(status: str, rank : str, age_of_building: int) -> dict:\n\
          \    if status == \"OK\":\n        return {\n        \"query_for_getting_yied\"\
          : f'ランク: {rank};築年数: {age_of_building}',\n        }\n    else:\n       \
          \ return {\n        \"query_for_getting_yied\": 'abcdefghijklmnopqrstuvwxyz'\n\
          \        }\n\n    \n"
        code_language: python3
        desc: 省略
        outputs:
          query_for_getting_yied:
            children: null
            type: string
        selected: false
        title: クエリ作成（関東）②
        type: code
        variables:
        - value_selector:
          - '17536788863340'
          - status
          variable: status
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '17536788863340'
          - rank
          variable: rank
      height: 81
      id: '17536789121950'
      position:
        x: 400.6275763077881
        y: 575.5125912189224
      positionAbsolute:
        x: 400.6275763077881
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_yield: str) -> dict:\n    try:\n        row = str(result_yield[0][\"\
          content\"])\n        rank = row.split(';')[0].split(': ')[1]\n        rate\
          \ = float(row.split(';')[2].split(': ')[1])\n        return {\n        \
          \    \"status\":\"OK\",\n            \"rate\": rate\n            }\n   \
          \ except Exception as e:\n        return {\n            \"status\":\"FAIL\"\
          ,\n            \"rate\":9999\n                }\n"
        code_language: python3
        desc: ''
        outputs:
          rate:
            children: null
            type: number
          status:
            children: null
            type: string
        selected: false
        title: 利回り算出_関東_最寄り駅②
        type: code
        variables:
        - value_selector:
          - '1744361251036'
          - result
          variable: result_yield
      height: 53
      id: '17536790221620'
      position:
        x: 1035.1497839850363
        y: 575.5125912189224
      positionAbsolute:
        x: 1035.1497839850363
        y: 575.5125912189224
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result: dict):\n    try:\n        row = str(result[0][\"\
          content\"])\n        rank = row.split(';')[1].split(': ')[1]\n        ap_rank_base\
          \ = float(row.split(';')[3].split(': ')[1])\n        ap_rank_special = (row.split(';')[4].split(':\
          \ ')[1] == \"1.0\")\n        return {\n            \"status\":\"OK\",\n\
          \            \"rank\": rank, \n            \"ap_rank_base\": ap_rank_base,\n\
          \            \"ap_rank_special\": ap_rank_special\n            }\n    except\
          \ Exception as e:\n        return {\n            \"status\":\"FAIL\",\n\
          \            \"rank\": \"NG\",\n            \"ap_rank_base\": 9999,\n  \
          \          \"ap_rank_special\": False\n            }"
        code_language: python3
        desc: 省略
        outputs:
          ap_rank_base:
            children: null
            type: number
          ap_rank_special:
            children: null
            type: number
          rank:
            children: null
            type: string
          status:
            children: null
            type: string
        selected: false
        title: クエリ結果から値抽出_関東以外_最寄り駅①
        type: code
        variables:
        - value_selector:
          - '17502405777910'
          - result
          variable: result
      height: 81
      id: '17536792033640'
      position:
        x: 96.2144223847838
        y: 1175.1010641090118
      positionAbsolute:
        x: 96.2144223847838
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(status: str, rank : str, age_of_building: int) -> dict:\n\
          \    if status == \"OK\":\n        return {\n        \"query_for_getting_yied\"\
          : f'ランク: {rank};築年数: {age_of_building}',\n        }\n    else:\n       \
          \ return {\n        \"query_for_getting_yied\": 'abcdefghijklmnopqrstuvwxyz'\n\
          \        }\n\n    \n"
        code_language: python3
        desc: '入力：

           @status => 駅ランク取得のクエリが成功したか否か : string

          @age_of_building => 築年数 : int

          @rank => 駅ランク（ジャックス評価） : string


          処理：

          入力値から、利回りを検索するためのクエリを作成する


          出力:

          @query_for_getting_yied => クエリ用テキスト : string'
        outputs:
          query_for_getting_yied:
            children: null
            type: string
        selected: false
        title: クエリ作成（関東） (1)
        type: code
        variables:
        - value_selector:
          - '17536792033640'
          - status
          variable: status
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '17536792033640'
          - rank
          variable: rank
      height: 289
      id: '17536792033641'
      position:
        x: 400.6275763077881
        y: 1175.1010641090118
      positionAbsolute:
        x: 400.6275763077881
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result: dict):\n    try:\n        row = str(result[0][\"\
          content\"])\n        rank = row.split(';')[1].split(': ')[1]\n        ap_rank_base\
          \ = float(row.split(';')[3].split(': ')[1])\n        ap_rank_special = (row.split(';')[4].split(':\
          \ ')[1] == \"1.0\")\n        return {\n            \"status\":\"OK\",\n\
          \            \"rank\": rank, \n            \"ap_rank_base\": ap_rank_base,\n\
          \            \"ap_rank_special\": ap_rank_special\n            }\n    except\
          \ Exception as e:\n        return {\n            \"status\":\"FAIL\",\n\
          \            \"rank\": \"NG\",\n            \"ap_rank_base\": 9999,\n  \
          \          \"ap_rank_special\": False\n            }"
        code_language: python3
        desc: 省略
        outputs:
          ap_rank_base:
            children: null
            type: number
          ap_rank_special:
            children: null
            type: number
          rank:
            children: null
            type: string
          status:
            children: null
            type: string
        selected: false
        title: クエリ結果から値抽出_関東以外_最寄り駅②
        type: code
        variables:
        - value_selector:
          - '17502405924900'
          - result
          variable: result
      height: 81
      id: '17536792033642'
      position:
        x: 96.2144223847838
        y: 1557.532513537758
      positionAbsolute:
        x: 96.2144223847838
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(status: str, rank : str, age_of_building: int) -> dict:\n\
          \    if status == \"OK\":\n        return {\n        \"query_for_getting_yied\"\
          : f'ランク: {rank};築年数: {age_of_building}',\n        }\n    else:\n       \
          \ return {\n        \"query_for_getting_yied\": 'abcdefghijklmnopqrstuvwxyz'\n\
          \        }\n\n    \n"
        code_language: python3
        desc: '入力：

           @status => 駅ランク取得のクエリが成功したか否か : string

          @age_of_building => 築年数 : int

          @rank => 駅ランク（ジャックス評価） : string


          処理：

          入力値から、利回りを検索するためのクエリを作成する


          出力:

          @query_for_getting_yied => クエリ用テキスト : string'
        outputs:
          query_for_getting_yied:
            children: null
            type: string
        selected: false
        title: クエリ作成（関東）② (1)
        type: code
        variables:
        - value_selector:
          - '17536788863340'
          - status
          variable: status
        - value_selector:
          - '1744954912822'
          - age_of_building
          variable: age_of_building
        - value_selector:
          - '17536788863340'
          - rank
          variable: rank
      height: 289
      id: '17536792033643'
      position:
        x: 400.6275763077881
        y: 1557.532513537758
      positionAbsolute:
        x: 400.6275763077881
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_yield: str) -> dict:\n    try:\n        row = str(result_yield[0][\"\
          content\"])\n        rank = row.split(';')[0].split(': ')[1]\n        rate\
          \ = float(row.split(';')[2].split(': ')[1])\n        return {\n        \
          \    \"status\":\"OK\",\n            \"rate\": rate\n            }\n   \
          \ except Exception as e:\n        return {\n            \"status\":\"FAIL\"\
          ,\n            \"rate\":9999\n                }\n"
        code_language: python3
        desc: ''
        outputs:
          rate:
            children: null
            type: number
          status:
            children: null
            type: string
        selected: false
        title: 利回り算出_関東以外_最寄駅①
        type: code
        variables:
        - value_selector:
          - '17502405906880'
          - result
          variable: result_yield
      height: 53
      id: '17536797903060'
      position:
        x: 1035.1497839850363
        y: 1175.1010641090118
      positionAbsolute:
        x: 1035.1497839850363
        y: 1175.1010641090118
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "\ndef main(result_yield: str) -> dict:\n    try:\n        row = str(result_yield[0][\"\
          content\"])\n        rank = row.split(';')[0].split(': ')[1]\n        rate\
          \ = float(row.split(';')[2].split(': ')[1])\n        return {\n        \
          \    \"status\":\"OK\",\n            \"rate\": rate\n            }\n   \
          \ except Exception as e:\n        return {\n            \"status\":\"FAIL\"\
          ,\n            \"rate\":9999\n                }\n"
        code_language: python3
        desc: ''
        outputs:
          rate:
            children: null
            type: number
          status:
            children: null
            type: string
        selected: false
        title: 利回り算出_関東以外_最寄駅②
        type: code
        variables:
        - value_selector:
          - '17503029643790'
          - result
          variable: result_yield
      height: 53
      id: '17536798046200'
      position:
        x: 1035.1497839850363
        y: 1557.532513537758
      positionAbsolute:
        x: 1035.1497839850363
        y: 1557.532513537758
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: t_kokusho
        desc: ''
        height: 617
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"会社名のNG判定","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 2782
      height: 617
      id: '1753692302074'
      position:
        x: 1622.3144003782606
        y: 794.9712523101451
      positionAbsolute:
        x: 1622.3144003782606
        y: 794.9712523101451
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 2782
    - data:
        author: t_kokusho
        desc: ''
        height: 677
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"ジャックスNG判定","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 2765
      height: 677
      id: '17536923599830'
      position:
        x: 1622.3144003782606
        y: 86.90139256246195
      positionAbsolute:
        x: 1622.3144003782606
        y: 86.90139256246195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 2765
    - data:
        author: t_kokusho
        desc: ''
        height: 1306
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"補填費用の算出","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 1091
      height: 1306
      id: '17536925499310'
      position:
        x: 4489.992981779612
        y: 94.96949581691888
      positionAbsolute:
        x: 4489.992981779612
        y: 94.96949581691888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1091
    - data:
        author: t_kokusho
        desc: ''
        height: 438
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"査定金額算出","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: '  (2)'
        type: ''
        width: 1292
      height: 438
      id: '17536926071140'
      position:
        x: 7878.495022682994
        y: 86.90139256246195
      positionAbsolute:
        x: 7878.495022682994
        y: 86.90139256246195
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1292
    - data:
        author: t_kokusho
        desc: ''
        height: 426
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"物件カテゴリ算出","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: '  (3)'
        type: ''
        width: 2118
      height: 426
      id: '17536926345320'
      position:
        x: 5715.8194049534
        y: 94.96949581691888
      positionAbsolute:
        x: 5715.8194049534
        y: 94.96949581691888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 2118
    - data:
        author: t_kokusho
        desc: ''
        height: 1793
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"駅マスタから検索","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ' (1)'
        type: ''
        width: 2786
      height: 1793
      id: '17536926615990'
      position:
        x: -1180.3761133201879
        y: 71.29163429692619
      positionAbsolute:
        x: -1180.3761133201879
        y: 71.29163429692619
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 2786
    - data:
        author: t_kokusho
        desc: ''
        height: 791
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"テキストから各情報を抽出","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: '  (2)'
        type: ''
        width: 1802
      height: 791
      id: '17536928147750'
      position:
        x: -3075.031656577953
        y: 71.29163429692619
      positionAbsolute:
        x: -3075.031656577953
        y: 71.29163429692619
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1802
    - data:
        author: t_kokusho
        desc: ''
        height: 855
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"関東","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: green
        title: '  (2)'
        type: ''
        width: 1949
      height: 855
      id: '17536930680320'
      position:
        x: -628.300789637353
        y: 125.08314375416933
      positionAbsolute:
        x: -628.300789637353
        y: 125.08314375416933
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1949
    - data:
        author: t_kokusho
        desc: ''
        height: 730
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"関東以外","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: green
        title: '  (3)'
        type: ''
        width: 1958
      height: 730
      id: '17536931130130'
      position:
        x: -638.9970937863368
        y: 1082.9968828632223
      positionAbsolute:
        x: -638.9970937863368
        y: 1082.9968828632223
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1958
    - data:
        author: t_kokusho
        desc: ''
        height: 145
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"マニュアル：","type":"text","version":1},{"type":"linebreak","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"{{URL}}","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 468
      height: 145
      id: '1754269311422'
      position:
        x: -3347.884721654422
        y: -114.38719129824904
      positionAbsolute:
        x: -3347.884721654422
        y: -114.38719129824904
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 468
    viewport:
      x: -2896.524842191803
      y: 74.31537669822322
      zoom: 0.38641327123008273
